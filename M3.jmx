<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="usqe1" enabled="false">
        <collectionProp name="Arguments.arguments">
          <elementProp name="aps" elementType="Argument">
            <stringProp name="Argument.name">aps</stringProp>
            <stringProp name="Argument.value">api-aps-ts-usqe1.qe.tivoservice.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="bodyId" elementType="Argument">
            <stringProp name="Argument.name">bodyId</stringProp>
            <stringProp name="Argument.value">tsn:A7F000001677653</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="authorization" elementType="Argument">
            <stringProp name="Argument.name">authorization</stringProp>
            <stringProp name="Argument.value">eyJkb21haW4iOiJjYWJsZWNvMy1tYW5hZ2Vkc29mdCIsInRva2VuIjoieElMNUM2UjVCWjhKUWo1OWlwbHJsMWs0WkticXp6bjg2cEdBa0I4XzNrQjJFN2VTRl9aX2JZT3N3ZGhKdmJucGF4X2E4Vl85eTM5b2MyX29UQ0ZCM1JGU3VzaEJLS2tUT2Vxdkw3bWhWSHBiYm4yNjdQSEpCLnBiVTRNWXZrczJsS0ZkbjdEZ0ZMa1R2TUYyQjZhOGk2RDNuNWROcjVDd0lhbTJPMEhGNXRodTJramR4bnhzdU5pejZhWEFnVTU3d0l1Mnd0eE13RFdqbVJfcXh0alVVczFGOHI1eGZja1JFTFNNdVZnRnZNYjJnOGcuVFdiTHlLMGhxOWRLRXRibnVjVTcxeWVEQ2E0VEdMZWhReHpqWE5ZOVFhV0VkTTE4bTMwMDhFUmdjT1ktIiwidHlwZSI6ImRvbWFpblRva2VuIn0=</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="host_disc" elementType="Argument">
            <stringProp name="Argument.name">host_disc</stringProp>
            <stringProp name="Argument.value">http://aps-discovery-ts-usqe1-01.tea2.tivo.com:40285</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="host_prov" elementType="Argument">
            <stringProp name="Argument.name">host_prov</stringProp>
            <stringProp name="Argument.value">http://aps-provisioning-ts-usqe1-01.tea2.tivo.com:40288</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="host_prov_node" elementType="Argument">
            <stringProp name="Argument.name">host_prov_node</stringProp>
            <stringProp name="Argument.value">http://aps-provisioning-ts-usqe1-01.tea2.tivo.com:40288</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="host_event_node" elementType="Argument">
            <stringProp name="Argument.name">host_event_node</stringProp>
            <stringProp name="Argument.value">http://aps-events-ts-latest-01.tea2.tivo.com:40295</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="host_dbs" elementType="Argument">
            <stringProp name="Argument.name">host_dbs</stringProp>
            <stringProp name="Argument.value">http://devicebindingservice.tpa1.tivo.com:50207</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="partnerCustomerId" elementType="Argument">
            <stringProp name="Argument.name">partnerCustomerId</stringProp>
            <stringProp name="Argument.value">suresh-usqe1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="hardwareSerialNumber" elementType="Argument">
            <stringProp name="Argument.name">hardwareSerialNumber</stringProp>
            <stringProp name="Argument.value">SL20200615120000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="caDeviceId" elementType="Argument">
            <stringProp name="Argument.name">caDeviceId</stringProp>
            <stringProp name="Argument.value">3e491188-b0ce-11ea-b3de-0242ac130004</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="mind" elementType="Argument">
            <stringProp name="Argument.name">mind</stringProp>
            <stringProp name="Argument.value">http://int-mind-vip.usqe1.tivo.com:8085/mind/mind39</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="middlemind" elementType="Argument">
            <stringProp name="Argument.name">middlemind</stringProp>
            <stringProp name="Argument.value">http://int-mm-vip.usqe1.tivo.com:2197</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="tacomind" elementType="Argument">
            <stringProp name="Argument.name">tacomind</stringProp>
            <stringProp name="Argument.value">http://int-mind-vip.usqe1.tivo.com:8085/tacomind/v33/do</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="aps_entitlement_host" elementType="Argument">
            <stringProp name="Argument.name">aps_entitlement_host</stringProp>
            <stringProp name="Argument.value">aps-entitlements-ts-usqe1-01.tea2.tivo.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="aps_entitlement_port" elementType="Argument">
            <stringProp name="Argument.name">aps_entitlement_port</stringProp>
            <stringProp name="Argument.value">40296</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="anonBodyId" elementType="Argument">
            <stringProp name="Argument.name">anonBodyId</stringProp>
            <stringProp name="Argument.value">int:05000199F838E889</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="movie_contentId" elementType="Argument">
            <stringProp name="Argument.name">movie_contentId</stringProp>
            <stringProp name="Argument.value">tivo:ct.618857</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="movie_collectionId" elementType="Argument">
            <stringProp name="Argument.name">movie_collectionId</stringProp>
            <stringProp name="Argument.value">tivo:cl.618856</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="episode_contentId" elementType="Argument">
            <stringProp name="Argument.name">episode_contentId</stringProp>
            <stringProp name="Argument.value">tivo:ct.291782991</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="episode_collectionId" elementType="Argument">
            <stringProp name="Argument.name">episode_collectionId</stringProp>
            <stringProp name="Argument.value">tivo:cl.97522875</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="series_contentId" elementType="Argument">
            <stringProp name="Argument.name">series_contentId</stringProp>
            <stringProp name="Argument.value">tivo:ct.343502851</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="series_collectionId" elementType="Argument">
            <stringProp name="Argument.name">series_collectionId</stringProp>
            <stringProp name="Argument.value">tivo:cl.343502850</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="MLT_series" elementType="Argument">
            <stringProp name="Argument.name">MLT_series</stringProp>
            <stringProp name="Argument.value">tivo:cl.378001815</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="idType" elementType="Argument">
            <stringProp name="Argument.name">idType</stringProp>
            <stringProp name="Argument.value">production</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="host_disc_api" elementType="Argument">
            <stringProp name="Argument.name">host_disc_api</stringProp>
            <stringProp name="Argument.value">http://api-aps-ts-usqe1.qe.tivoservice.com:40285</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="JWTAuthorization" elementType="Argument">
            <stringProp name="Argument.name">JWTAuthorization</stringProp>
            <stringProp name="Argument.value">eyJhbGciOiJQUzI1NiIsInR5cGUiOiJKV1QiLCJ4NWMiOiJlSnpObDBuVG9rb1dodmY4aXQ0YkZRd2k2S0lYbVpDTWdzd0NPd1lCR1ZSQUJ2bjFqZDkzcTI3ZHFxNTdJNm8zYllRUlNVNG1KOV96UHNjdlg5WVBSS0tzXzR0RGxpTUxNZ2NjOU83OGdtbXlMTndXam9QeUpRZVRERUV1dTRKdHQyUmpaSnNqeUVQYUNkR05peTdQd2liby04U2JnYUxlUTdrWUV4Mlk2SWhCRTB4NVdNM2NBaFNZNng0RWdRTnFxR21XT2FFODREM1RsTkgwMUFQX01hWlVYUWZVOHhFNnlOQUFJUUxTUlJpY05kR2poRmRDQ1Z2Tm1pYnhjNUdLWnAxUHo4b2pYY2RDR3pvSlItZVhLeHlQelg3NGJ0NFJXeWM2NFZrbms2WW1MalpFb1EtTDVHWTl3X09PME94a1VzeVBpVHlhZDM5dTZPcEYwTXgxS3RZbEZyaFduVFoxR1hyd0ZWT1dwdk5na29wRTFfaDgwaHd3YS12ei0zdC05NVh5WF90S0RtTDNCUjAxVUgyOER5dzB6a1hUTFBEQV9veEg3bkFFV1Z5YXd6WTZlMlcweGtBejktOUF2azhsb1NuMHNjQlhsc0JQWm9rSDBlZWl1NE1JblF5YWVydU8xYktnVDhjclpHUnhQOFF2LXJ0NXZZTkl2Y2FDcmZlS2ZHc25JNnRPUk9HVmltUWQzOHg1UGVyNE9WRnpWVUYzemZxQVROS2NUN3k3TThraU15bmhHb3NlZ1VWbnZmQUpFcHJrZnRMUUd0S2xGblRIblBVeW1mSWNYZF9YeGRtdGFNdnhsamNSQktZTEFDMURmZ0x2Y1JVRDkxVThKdGRTYzJhelFzVllPbkhiYUZUQ1pVVDZ3djBkc0VLXzdPNGpHNW43MDRHa19SVG9VUXZYQXpDMmU3eWJHQ3NFa2E0YnBfaEVvbUttSklzTlZaMVhFdFN3NmdrdVhhQ19vblBmSGk5SVNvS2F0ZktaYkxWNS15cWdQWGFMNEdBWlJXMDBlcEZpdGNFYjBEMjZvQlhpRXM4dnVDVE03VDFUS19GQ0xva0dYSk1zVTVjMy1OU3hPNFJIa3NZbEw5SEFodW1VSGlvVXlsZHJzX2dlUlVUTmM1ZlNaYjdRdEpCZEVKME11VGk0ck05WDlpQnhJVWNaX2FKZHRIN2dpcmk1eVpneldWbG9jb2ZqMm1DSmJjTGN5cEc4aDVYMFBDZFBna0VlQXhjSmo0VHRuVHZ0aTduUXJ4VHo3RjdLZmVkRVlkZ0N6QzJybm91NlJTM05qZHJlT0xfcnVHM3lIRnVfejBDdVFRREVNczhsYTgxYXVEaEFlMV90LWdSQnRrZWdCQURUQVAxV1ljcFBDT0tUaWRhVUZtZ2VwQjhUVFJvSnVla3FBLTRfYmpTS05IT1l1LWlsdkt3R2xiaXFLZHFFNWVuMHNZRTgyWkRrT1VnRXdIWEhFbTF4MGdUT1ZWRG5xRWV2UWRzZjZhUWFYa1VlcVZVZTdsY0xtRDRzQVBzZERfamVBckRmOFlEdkxRRDcyUVB1a3dyLThJQ1g4Rjg5NEhzTHdGWVBzR1BxUUppcjVBVWhIa1F0ODBvZjMyakhfV0hUbmE5T2Q3dlhzaHRyVVB1SWxXS2FtZ2J1SXNmMTRwb1hBZ1luamRQNHowRnBNbnVOVzAtZ2d1Yk8yYUxjRkVRcUFlYjRPcFNCdlN2X2ZMMWRHVlBFNkRhSEVVczVramZYanFTWnB0QU1aSFVLSURSZGFYVmNkSGFncjNIMHQxLURDLUNLcTNKUEpXczZYZmRqUUtIaDdRZlh5RS1McEhHSGdEbzhqNlF5eGx2emFSSm9DTFlLc1hyVTl4dkFvcWlfYlJCVC1vSWwzTTlILTlFRHVPblRBNEFKNU9USVBieUYyUzlHZTl6dkJnSkxERTg4aHBzeGEtWUJYV203a0dkRmJuaGFLeTdFd0lLYzYydVpvWFp4ZXdzM3J3dDNQZGp5eGNMTEE3ZWh5c2Roa0REUnZoS3lhRFVkdXZZTXZCZUdtbmR3cUpwR0wxSkFVRnhvTzcza3NvdmRvSUdzSTd5Z0wtcEQ0Y2NPd3Jrdzh3M20xR1VwYk5DZ0VOdjBPdnY0dzc1VlFHWDJaLXQwMzZhcXhNeUhOdF9KalYydVpyUnZYbnU2M3kxNTNyWGhuRkViQWNkb3FPcE96Y2J6TFJpUi1Gb1hYaWltRjRtYkZYQTdzYUlqWVhUN01McmRVa0xNYXlQTHltZFNTY3o1UUdTNWVjMml0eWZHeEhGaHhydHdUbkJON09ORDlZaXNwVTE1R2hZLWU3MW1YTDB6ZzRRZnpTUzRSV09GRUpSZE1hSU03MjdRZTZ3UG15UDJBV3FrOHpfRC04c19nRjNtVjdDRDZ6ZXdld01kekllem51SDBOQzViNWhrcHAtRnlkUXVyX3hYWXBfOWJzUDl6VXY4STlqLVNHdjBhN292N2x6N3NUZmZHLVgyNFkyLTZfeTl3eDk1MF94WGNsV1c5ajAtNE8xTDE1NFpmb2Y1bU9tYXRkN0EyYWxkU3hoQk5oTFpxQXRqeWpfZTkyZ3ZnVjVBYjREMXUzcm0xdmU1YjNEQndJcmZ4WlVhVVdNNDVPcWlGdzV4U21yaWZ4T0kxbVkxQ1VDUW9XZVhHQWVPNHlSdEJGLVp3czZfYy0zUUk2T284WXVwd1VjTDh3ZzQ0bjBTUndFMExYdHhxNFhieWdab2lvU0NyOENIM3B2YlFGUGVBRzZEWE92dFVYMVBmdFdzV0VUSVcwTTBpY1RwNzZjZ29KbDRnbW9ldGJ2blhYS3FObWhCdXhocDloNDBaM1ZPTC0ycE0zZlVoUEhqZEhrM1ZPWFQwQ1dPWnAtaUdlc2kwaVQxSnZuc1BVZXJCdzkxbHJaY18xNVFNdk5heFRqVGg2cTNhdnN5QTFPOTQtOERud0Uzem1PNndlaktpMC1ONDVQSlV6azZsUW94LVBzWlNMRG0tMHU5R0kyQU5JMGx5WHByN3lzdE9ISDZNbjlScG54eGo4aUdOQndYcmd5U3JYMHN6ZWJkSktwZHprbGNjbUJBQTBZa0RYcldXVUlLblFlS1QzYmw1aHRDeU41cVQ0UjZBSjludE1LR2RISlZlcHJGNDJleks1ZTFiWVJaUlFsbnlORm15Yy1pd3U1Z1NWNE9ORUdSWmZURElMRlRQVV9hVTIwaGNhOVRXaG11aEQyXzg3OGtaLTFxc19xNmNzYV9GNnFfa3JKYmdfbFhPc3Z1em5EOXExTF9JV1hoRHpWcFBKM3RBb3dVNk9ZVjdoYVhzWGJ4NTNnVUlOa1BvME9lTEJ1V1B3SzdaLUZFVnlSb0kzaVhUcW5Nd2NkTkhJSTJWWWp6SVJmSHZ1STM5RTdpXzVfYVBodnBPTU93anEzaXRiZFBVTEU1eDJPV2RuMUZCdnBueVRId1FLU3NKLTlYbXN0SVFPRjk1YVkxeThhUW9TODVEZUVYOURzZHdwMTVndTZkM2RzR1pPV20yM1hHVERtcERid3hKWGRQem9YaDdsZGwyUkg5ZThPTlpiemN1WlBMNGtKbUhwM2U2d1ZYS3o2ZlZtRlVXSFo2MlZ6X2RwM05oNkdqbUlJZXVlUGRROE41TmdsN2RaWTJvOHZuT1dmOENJSmJmS0YyMUdRem1pdDJjdmE0Q2FyeFlMWlV4QjhGZ1ZjNUhXNzN4WjZsZXpuN2ZiSTNyelhnc2tSQS1tX1B0V0p1WGFCRUFZMHl2X2VLa1dIUmtNOXBMTm9RdjhmMUQ1U3NwSFFpRFdTc1hZeXVQcjhyc2syMngzZFNuQVQyWmtXRjJZVkNTOE9BLTdFNjhxSWNDOHlvQndwT0xsNkZRRlJKRnk4MHFzN3JpNXNIOTk5X1E4ai12V3RkVCIsIng1Y2UiOiJERUYifQ.eyJpYXQiOjE1OTMxMDY5NDU4OTUsImV4cCI6MTU5MzE5MzM0NTg5NSwianRpIjoiYmRkYjIyYWEtYTFiMi00YzZiLTkzYmItMjg1Zjk4NTc5NzRiIiwiYm9keSI6eyJkZXZpY2VJZCI6IjQyMWEzYWJjLWFjZmEtMTFlYS1iYjM3LTAyNDJhYzEzMDAwMiIsImRldmljZVR5cGUiOiJtYW5hZ2VkQ3ViaVR2IiwibXNvTmFtZSI6ImNhYmxlY28zIiwiaGFyZHdhcmVTZXJpYWxOdW1iZXIiOiJTTDIwMjAwNjEyMTUwMDAwIn19.ZmKOP7fnQ0I8oadpeX8Uhz6ItD6vGOagdNgi-GGeIf4iqsxxtc7NGP9T4cU33ftGcgB6eBymN3tEUGV60V-w9jVevry9qg3BLRs46nkc6esLT_7N9O5J2i0xO6IXcCP-0LfeNfzdBEMQCTFg1HajBuGvXHB1DkOkIe8BcPRdd-x1wjRxuaMX_bUIUl1U45FfbnGKV6fPzBYOp3sfw_my3MqHjA6LQX0bIyZdY6hwltsDU2JOVwrO8O1-JWwVaWH_twpTizOFnAPym5A5PzIrUx1SNA_AlBRAhD7BC_U_uFBNFFVao_mGGOcqUr8x_AAXhKUVL2cpS-RMrVnyg8I3uQ</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="cdvrqe1" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="aps" elementType="Argument">
            <stringProp name="Argument.name">aps</stringProp>
            <stringProp name="Argument.value">api-aps-ts-latest.dev.tivoservice.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="bodyId" elementType="Argument">
            <stringProp name="Argument.name">bodyId</stringProp>
            <stringProp name="Argument.value">tsn:A7F000001676817</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="authorization" elementType="Argument">
            <stringProp name="Argument.name">authorization</stringProp>
            <stringProp name="Argument.value">eyJkb21haW4iOiJjYWJsZWNvMy1tYW5hZ2Vkc29mdCIsInRva2VuIjoiOE1vT3lFa01LMThfUzV1MlM0ZElXUU9SNENfdmhBS3pocXVnQ2hQdW5GTTI5TG94LkViRmhLZ2tFVzhLalQ3b2RRbEFSYUtrYVJ1d1Nha3ZObmZxQTlqSWd3SGliX21OanAwTXpFck80eldlYnZ6S0lhRG1Bb252OG1OLkV3YnQzaFVheE5hM2xJQVBnMzdaelpJaW9kR2FXbkJaMXFsVFZ6U21CNXguZjRqakY1RDEzaWIuYjBVdUc0SzlaN3NFTjRQanp4OVpVZUUyMHJ5V19NdXA5TVBzRnkzOHpUSU80RzlpN0VYZm9mRFRUSGp2Q2FNMnNUSktHWG5MYkp1enlPWlU0NGVrb2t6NnhZcTBoSTBvNFZkQnBDSVN4RDR5Nlg4aHNoMG1aem8tIiwidHlwZSI6ImRvbWFpblRva2VuIn0=</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="host_disc" elementType="Argument">
            <stringProp name="Argument.name">host_disc</stringProp>
            <stringProp name="Argument.value">http://aps-discovery-ts-latest-01.tea2.tivo.com:40285</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="host_prov" elementType="Argument">
            <stringProp name="Argument.name">host_prov</stringProp>
            <stringProp name="Argument.value">http://aps-provisioning-ts-latest-01.tea2.tivo.com:40288</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="host_prov_node" elementType="Argument">
            <stringProp name="Argument.name">host_prov_node</stringProp>
            <stringProp name="Argument.value">http://aps-provisioning-ts-latest-01.tea2.tivo.com:40288</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="host_event_node" elementType="Argument">
            <stringProp name="Argument.name">host_event_node</stringProp>
            <stringProp name="Argument.value">http://aps-events-ts-latest-01.tea2.tivo.com:40295</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="host_dbs" elementType="Argument">
            <stringProp name="Argument.name">host_dbs</stringProp>
            <stringProp name="Argument.value">http://dbs-integration-01.tea2.tivo.com:40207</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="partnerCustomerId" elementType="Argument">
            <stringProp name="Argument.name">partnerCustomerId</stringProp>
            <stringProp name="Argument.value">suresh-cdvrqe1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="hardwareSerialNumber" elementType="Argument">
            <stringProp name="Argument.name">hardwareSerialNumber</stringProp>
            <stringProp name="Argument.value">SL20200615120000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="caDeviceId" elementType="Argument">
            <stringProp name="Argument.name">caDeviceId</stringProp>
            <stringProp name="Argument.value">421a3abc-acfa-11ea-bb37-0242ac130002</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="REMOVEmind" elementType="Argument">
            <stringProp name="Argument.name">REMOVEmind</stringProp>
            <stringProp name="Argument.value">http://int-mind-vip.cdvrqe1.tivo.com:8085/mind/mind39</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="middlemind" elementType="Argument">
            <stringProp name="Argument.name">middlemind</stringProp>
            <stringProp name="Argument.value">http://int-mm-vip.cdvrqe1.tivo.com:2197</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="tacomind" elementType="Argument">
            <stringProp name="Argument.name">tacomind</stringProp>
            <stringProp name="Argument.value">http://int-mind-vip.cdvrqe1.tivo.com:8085/tacomind/v33/do</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="aps_entitlement_host" elementType="Argument">
            <stringProp name="Argument.name">aps_entitlement_host</stringProp>
            <stringProp name="Argument.value">aps-entitlements-ts-usqe1-01.tea2.tivo.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="aps_entitlement_port" elementType="Argument">
            <stringProp name="Argument.name">aps_entitlement_port</stringProp>
            <stringProp name="Argument.value">40296</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="anonBodyId" elementType="Argument">
            <stringProp name="Argument.name">anonBodyId</stringProp>
            <stringProp name="Argument.value">int:0500014A3F43F3F0</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="movie_contentId" elementType="Argument">
            <stringProp name="Argument.name">movie_contentId</stringProp>
            <stringProp name="Argument.value">tivo:ct.618857</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="movie_collectionId" elementType="Argument">
            <stringProp name="Argument.name">movie_collectionId</stringProp>
            <stringProp name="Argument.value">tivo:cl.618856</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="episode_contentId" elementType="Argument">
            <stringProp name="Argument.name">episode_contentId</stringProp>
            <stringProp name="Argument.value">tivo:ct.291782991</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="episode_collectionId" elementType="Argument">
            <stringProp name="Argument.name">episode_collectionId</stringProp>
            <stringProp name="Argument.value">tivo:cl.97522875</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="series_contentId" elementType="Argument">
            <stringProp name="Argument.name">series_contentId</stringProp>
            <stringProp name="Argument.value">tivo:ct.343502851</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="series_collectionId" elementType="Argument">
            <stringProp name="Argument.name">series_collectionId</stringProp>
            <stringProp name="Argument.value">tivo:cl.343502850</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="MLT_series" elementType="Argument">
            <stringProp name="Argument.name">MLT_series</stringProp>
            <stringProp name="Argument.value">tivo:cl.378001815</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="idType" elementType="Argument">
            <stringProp name="Argument.name">idType</stringProp>
            <stringProp name="Argument.value">integration</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="host_disc_api" elementType="Argument">
            <stringProp name="Argument.name">host_disc_api</stringProp>
            <stringProp name="Argument.value">http://api-aps-ts-usqe1.qe.tivoservice.com:40285</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="JWTAuthorization" elementType="Argument">
            <stringProp name="Argument.name">JWTAuthorization</stringProp>
            <stringProp name="Argument.value">eyJhbGciOiJQUzI1NiIsInR5cGUiOiJKV1QiLCJ4NWMiOiJlSnpObDBuVG9rb1dodmY4aXQ0YkZRd2k2S0lYbVpDTWdzd0NPd1lCR1ZSQUJ2bjFqZDkzcTI3ZHFxNTdJNm8zYllRUlNVNG1KOV96UHNjdlg5WVBSS0tzXzR0RGxpTUxNZ2NjOU83OGdtbXlMTndXam9QeUpRZVRERUV1dTRKdHQyUmpaSnNqeUVQYUNkR05peTdQd2liby04U2JnYUxlUTdrWUV4Mlk2SWhCRTB4NVdNM2NBaFNZNng0RWdRTnFxR21XT2FFODREM1RsTkgwMUFQX01hWlVYUWZVOHhFNnlOQUFJUUxTUlJpY05kR2poRmRDQ1Z2Tm1pYnhjNUdLWnAxUHo4b2pYY2RDR3pvSlItZVhLeHlQelg3NGJ0NFJXeWM2NFZrbms2WW1MalpFb1EtTDVHWTl3X09PME94a1VzeVBpVHlhZDM5dTZPcEYwTXgxS3RZbEZyaFduVFoxR1hyd0ZWT1dwdk5na29wRTFfaDgwaHd3YS12ei0zdC05NVh5WF90S0RtTDNCUjAxVUgyOER5dzB6a1hUTFBEQV9veEg3bkFFV1Z5YXd6WTZlMlcweGtBejktOUF2azhsb1NuMHNjQlhsc0JQWm9rSDBlZWl1NE1JblF5YWVydU8xYktnVDhjclpHUnhQOFF2LXJ0NXZZTkl2Y2FDcmZlS2ZHc25JNnRPUk9HVmltUWQzOHg1UGVyNE9WRnpWVUYzemZxQVROS2NUN3k3TThraU15bmhHb3NlZ1VWbnZmQUpFcHJrZnRMUUd0S2xGblRIblBVeW1mSWNYZF9YeGRtdGFNdnhsamNSQktZTEFDMURmZ0x2Y1JVRDkxVThKdGRTYzJhelFzVllPbkhiYUZUQ1pVVDZ3djBkc0VLXzdPNGpHNW43MDRHa19SVG9VUXZYQXpDMmU3eWJHQ3NFa2E0YnBfaEVvbUttSklzTlZaMVhFdFN3NmdrdVhhQ19vblBmSGk5SVNvS2F0ZktaYkxWNS15cWdQWGFMNEdBWlJXMDBlcEZpdGNFYjBEMjZvQlhpRXM4dnVDVE03VDFUS19GQ0xva0dYSk1zVTVjMy1OU3hPNFJIa3NZbEw5SEFodW1VSGlvVXlsZHJzX2dlUlVUTmM1ZlNaYjdRdEpCZEVKME11VGk0ck05WDlpQnhJVWNaX2FKZHRIN2dpcmk1eVpneldWbG9jb2ZqMm1DSmJjTGN5cEc4aDVYMFBDZFBna0VlQXhjSmo0VHRuVHZ0aTduUXJ4VHo3RjdLZmVkRVlkZ0N6QzJybm91NlJTM05qZHJlT0xfcnVHM3lIRnVfejBDdVFRREVNczhsYTgxYXVEaEFlMV90LWdSQnRrZWdCQURUQVAxV1ljcFBDT0tUaWRhVUZtZ2VwQjhUVFJvSnVla3FBLTRfYmpTS05IT1l1LWlsdkt3R2xiaXFLZHFFNWVuMHNZRTgyWkRrT1VnRXdIWEhFbTF4MGdUT1ZWRG5xRWV2UWRzZjZhUWFYa1VlcVZVZTdsY0xtRDRzQVBzZERfamVBckRmOFlEdkxRRDcyUVB1a3dyLThJQ1g4Rjg5NEhzTHdGWVBzR1BxUUppcjVBVWhIa1F0ODBvZjMyakhfV0hUbmE5T2Q3dlhzaHRyVVB1SWxXS2FtZ2J1SXNmMTRwb1hBZ1luamRQNHowRnBNbnVOVzAtZ2d1Yk8yYUxjRkVRcUFlYjRPcFNCdlN2X2ZMMWRHVlBFNkRhSEVVczVramZYanFTWnB0QU1aSFVLSURSZGFYVmNkSGFncjNIMHQxLURDLUNLcTNKUEpXczZYZmRqUUtIaDdRZlh5RS1McEhHSGdEbzhqNlF5eGx2emFSSm9DTFlLc1hyVTl4dkFvcWlfYlJCVC1vSWwzTTlILTlFRHVPblRBNEFKNU9USVBieUYyUzlHZTl6dkJnSkxERTg4aHBzeGEtWUJYV203a0dkRmJuaGFLeTdFd0lLYzYydVpvWFp4ZXdzM3J3dDNQZGp5eGNMTEE3ZWh5c2Roa0REUnZoS3lhRFVkdXZZTXZCZUdtbmR3cUpwR0wxSkFVRnhvTzcza3NvdmRvSUdzSTd5Z0wtcEQ0Y2NPd3Jrdzh3M20xR1VwYk5DZ0VOdjBPdnY0dzc1VlFHWDJaLXQwMzZhcXhNeUhOdF9KalYydVpyUnZYbnU2M3kxNTNyWGhuRkViQWNkb3FPcE96Y2J6TFJpUi1Gb1hYaWltRjRtYkZYQTdzYUlqWVhUN01McmRVa0xNYXlQTHltZFNTY3o1UUdTNWVjMml0eWZHeEhGaHhydHdUbkJON09ORDlZaXNwVTE1R2hZLWU3MW1YTDB6ZzRRZnpTUzRSV09GRUpSZE1hSU03MjdRZTZ3UG15UDJBV3FrOHpfRC04c19nRjNtVjdDRDZ6ZXdld01kekllem51SDBOQzViNWhrcHAtRnlkUXVyX3hYWXBfOWJzUDl6VXY4STlqLVNHdjBhN292N2x6N3NUZmZHLVgyNFkyLTZfeTl3eDk1MF94WGNsV1c5ajAtNE8xTDE1NFpmb2Y1bU9tYXRkN0EyYWxkU3hoQk5oTFpxQXRqeWpfZTkyZ3ZnVjVBYjREMXUzcm0xdmU1YjNEQndJcmZ4WlVhVVdNNDVPcWlGdzV4U21yaWZ4T0kxbVkxQ1VDUW9XZVhHQWVPNHlSdEJGLVp3czZfYy0zUUk2T284WXVwd1VjTDh3ZzQ0bjBTUndFMExYdHhxNFhieWdab2lvU0NyOENIM3B2YlFGUGVBRzZEWE92dFVYMVBmdFdzV0VUSVcwTTBpY1RwNzZjZ29KbDRnbW9ldGJ2blhYS3FObWhCdXhocDloNDBaM1ZPTC0ycE0zZlVoUEhqZEhrM1ZPWFQwQ1dPWnAtaUdlc2kwaVQxSnZuc1BVZXJCdzkxbHJaY18xNVFNdk5heFRqVGg2cTNhdnN5QTFPOTQtOERud0Uzem1PNndlaktpMC1ONDVQSlV6azZsUW94LVBzWlNMRG0tMHU5R0kyQU5JMGx5WHByN3lzdE9ISDZNbjlScG54eGo4aUdOQndYcmd5U3JYMHN6ZWJkSktwZHprbGNjbUJBQTBZa0RYcldXVUlLblFlS1QzYmw1aHRDeU41cVQ0UjZBSjludE1LR2RISlZlcHJGNDJleks1ZTFiWVJaUlFsbnlORm15Yy1pd3U1Z1NWNE9ORUdSWmZURElMRlRQVV9hVTIwaGNhOVRXaG11aEQyXzg3OGtaLTFxc19xNmNzYV9GNnFfa3JKYmdfbFhPc3Z1em5EOXExTF9JV1hoRHpWcFBKM3RBb3dVNk9ZVjdoYVhzWGJ4NTNnVUlOa1BvME9lTEJ1V1B3SzdaLUZFVnlSb0kzaVhUcW5Nd2NkTkhJSTJWWWp6SVJmSHZ1STM5RTdpXzVfYVBodnBPTU93anEzaXRiZFBVTEU1eDJPV2RuMUZCdnBueVRId1FLU3NKLTlYbXN0SVFPRjk1YVkxeThhUW9TODVEZUVYOURzZHdwMTVndTZkM2RzR1pPV20yM1hHVERtcERid3hKWGRQem9YaDdsZGwyUkg5ZThPTlpiemN1WlBMNGtKbUhwM2U2d1ZYS3o2ZlZtRlVXSFo2MlZ6X2RwM05oNkdqbUlJZXVlUGRROE41TmdsN2RaWTJvOHZuT1dmOENJSmJmS0YyMUdRem1pdDJjdmE0Q2FyeFlMWlV4QjhGZ1ZjNUhXNzN4WjZsZXpuN2ZiSTNyelhnc2tSQS1tX1B0V0p1WGFCRUFZMHl2X2VLa1dIUmtNOXBMTm9RdjhmMUQ1U3NwSFFpRFdTc1hZeXVQcjhyc2syMngzZFNuQVQyWmtXRjJZVkNTOE9BLTdFNjhxSWNDOHlvQndwT0xsNkZRRlJKRnk4MHFzN3JpNXNIOTk5X1E4ai12V3RkVCIsIng1Y2UiOiJERUYifQ.eyJpYXQiOjE1OTMxMjI5MzIyNzIsImV4cCI6MTU5MzIwOTMzMjI3MiwianRpIjoiOTkzYTljNTAtZDhlMi00NTU2LTg0MWUtMDBmNmVkMjdiZWZjIiwiYm9keSI6eyJkZXZpY2VJZCI6IjQyMWEzYWJjLWFjZmEtMTFlYS1iYjM3LTAyNDJhYzEzMDAwMiIsImRldmljZVR5cGUiOiJtYW5hZ2VkQ3ViaVR2IiwibXNvTmFtZSI6ImNhYmxlY28zIiwiaGFyZHdhcmVTZXJpYWxOdW1iZXIiOiJTTDIwMjAwNjEyMTUwMDAwIn19.cqm30CL74m44ZnUxo-DoqoAVLtkNev2dNHweBYi0x_msXIMj7YQkkv-AMwXTmtK8GWIiw8mTs94ZJQ66Zg_XT9W5PSkghUwv0DCp8p-Hc9dlEEJJDC4mHzxb-iGpGUE0BNuf-8Avy8dqt1-PBiW7KBCSgf2uXI--jqJFOc_J1RpU1KOOLm5dM7PFI_iLWvLZa54lgLEOiNgFaHVKawMDgFf9axHM0po--jQyeijIm39Ul_cqKRoT7Y1f1KdMeZg5r9MUS0FaZuBj0hsX67Bfv6W0mj6vZGtlpk2dWLF3ZPcyq5_NG8ssStix4bQFcotw8sap8sc5SphXuUICdJRRZg</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="mind" elementType="Argument">
            <stringProp name="Argument.name">mind</stringProp>
            <stringProp name="Argument.value">int-mind-vip.cdvrqe1.tivo.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="mindPort" elementType="Argument">
            <stringProp name="Argument.name">mindPort</stringProp>
            <stringProp name="Argument.value">8085</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="mindPath" elementType="Argument">
            <stringProp name="Argument.name">mindPath</stringProp>
            <stringProp name="Argument.value">/mind/mind39</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Accept</stringProp>
            <stringProp name="Header.value">application/json</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Content-Type</stringProp>
            <stringProp name="Header.value">application/json</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Origin-RequestId</stringProp>
            <stringProp name="Header.value">123-1234</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">BodyId</stringProp>
            <stringProp name="Header.value">${bodyId}</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Authorization</stringProp>
            <stringProp name="Header.value">${authorization}</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="deviceViewEvents" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1. /v1/deviceViewEvents" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
 {&#xd;
  &quot;deviceType&quot;: &quot;managedCubiTv&quot;,&#xd;
  &quot;product&quot;: &quot;CubiTv&quot;,&#xd;
  &quot;itemId&quot;: &quot;tivo:ct.49457168&quot;,&#xd;
  &quot;queryId&quot;: &quot;5dasf2345701vgfs&quot;,&#xd;
  &quot;utcOffset&quot;: &quot;-0600&quot;,&#xd;
  &quot;country&quot;: &quot;USA&quot;,&#xd;
  &quot;type&quot;: &quot;LINEAR&quot;,&#xd;
  &quot;startTime&quot;: 1591898400000,&#xd;
  &quot;endTime&quot;: 1591900200000,&#xd;
  &quot;airingStartTime&quot;: 1591898400000,&#xd;
  &quot;startOffset&quot;: 1396,&#xd;
  &quot;endOffset&quot;: 1800,&#xd;
  &quot;contentDuration&quot;: 1800,&#xd;
  &quot;viewDuration&quot;: 399,&#xd;
  &quot;stationId&quot;: &quot;tivo:st.370200433&quot;,&#xd;
  &quot;vodProviderId&quot;: &quot;tivo:pt.1234&quot;&#xd;
  }&#xd;
]&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/deviceViewEvents</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Code = 202      " enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49588">202</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="2. (neg) with missing deviceType" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
 {&#xd;
  &quot;product&quot;: &quot;CubiTv&quot;,&#xd;
  &quot;itemId&quot;: &quot;tivo:ct.49457168&quot;,&#xd;
  &quot;queryId&quot;: &quot;5dasf2345701vgfs&quot;,&#xd;
  &quot;utcOffset&quot;: &quot;-0600&quot;,&#xd;
  &quot;country&quot;: &quot;USA&quot;,&#xd;
  &quot;type&quot;: &quot;LINEAR&quot;,&#xd;
  &quot;startTime&quot;: 1591898400000,&#xd;
  &quot;endTime&quot;: 1591900200000,&#xd;
  &quot;airingStartTime&quot;: 1591898400000,&#xd;
  &quot;startOffset&quot;: 1396,&#xd;
  &quot;endOffset&quot;: 1800,&#xd;
  &quot;contentDuration&quot;: 1800,&#xd;
  &quot;viewDuration&quot;: 399,&#xd;
  &quot;stationId&quot;: &quot;tivo:st.370200433&quot;,&#xd;
  &quot;vodProviderId&quot;: &quot;tivo:pt.1234&quot;&#xd;
  }&#xd;
]&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/deviceViewEvents</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="51508">400</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.(neg) with deviceType=INVALID &#x9;" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
 {&#xd;
  &quot;deviceType&quot;: &quot;INVALID&quot;, 	&#xd;
  &quot;product&quot;: &quot;CubiTv&quot;,&#xd;
  &quot;itemId&quot;: &quot;tivo:ct.49457168&quot;,&#xd;
  &quot;queryId&quot;: &quot;5dasf2345701vgfs&quot;,&#xd;
  &quot;utcOffset&quot;: &quot;-0600&quot;,&#xd;
  &quot;country&quot;: &quot;USA&quot;,&#xd;
  &quot;type&quot;: &quot;LINEAR&quot;,&#xd;
  &quot;startTime&quot;: 1591898400000,&#xd;
  &quot;endTime&quot;: 1591900200000,&#xd;
  &quot;airingStartTime&quot;: 1591898400000,&#xd;
  &quot;startOffset&quot;: 1396,&#xd;
  &quot;endOffset&quot;: 1800,&#xd;
  &quot;contentDuration&quot;: 1800,&#xd;
  &quot;viewDuration&quot;: 399,&#xd;
  &quot;stationId&quot;: &quot;tivo:st.370200433&quot;,&#xd;
  &quot;vodProviderId&quot;: &quot;tivo:pt.1234&quot;&#xd;
  }&#xd;
]&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/deviceViewEvents</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="51508">400</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.scope">all</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="4. (neg) with missing product" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
 {&#xd;
  &quot;deviceType&quot;: &quot;managedCubiTv&quot;,&#xd;
  &quot;itemId&quot;: &quot;tivo:ct.49457168&quot;,&#xd;
  &quot;queryId&quot;: &quot;5dasf2345701vgfs&quot;,&#xd;
  &quot;utcOffset&quot;: &quot;-0600&quot;,&#xd;
  &quot;country&quot;: &quot;USA&quot;,&#xd;
  &quot;type&quot;: &quot;LINEAR&quot;,&#xd;
  &quot;startTime&quot;: 1591898400000,&#xd;
  &quot;endTime&quot;: 1591900200000,&#xd;
  &quot;airingStartTime&quot;: 1591898400000,&#xd;
  &quot;startOffset&quot;: 1396,&#xd;
  &quot;endOffset&quot;: 1800,&#xd;
  &quot;contentDuration&quot;: 1800,&#xd;
  &quot;viewDuration&quot;: 399,&#xd;
  &quot;stationId&quot;: &quot;tivo:st.370200433&quot;,&#xd;
  &quot;vodProviderId&quot;: &quot;tivo:pt.1234&quot;&#xd;
  }&#xd;
]&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/deviceViewEvents</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="51508">400</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="5. (neg) with product=INVALID " enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
 {&#xd;
  &quot;deviceType&quot;: &quot;managedCubiTv&quot;,&#xd;
  &quot;product&quot;: &quot;INVALID&quot;,&#xd;
  &quot;itemId&quot;: &quot;tivo:ct.49457168&quot;,&#xd;
  &quot;queryId&quot;: &quot;5dasf2345701vgfs&quot;,&#xd;
  &quot;utcOffset&quot;: &quot;-0600&quot;,&#xd;
  &quot;country&quot;: &quot;USA&quot;,&#xd;
  &quot;type&quot;: &quot;LINEAR&quot;,&#xd;
  &quot;startTime&quot;: 1591898400000,&#xd;
  &quot;endTime&quot;: 1591900200000,&#xd;
  &quot;airingStartTime&quot;: 1591898400000,&#xd;
  &quot;startOffset&quot;: 1396,&#xd;
  &quot;endOffset&quot;: 1800,&#xd;
  &quot;contentDuration&quot;: 1800,&#xd;
  &quot;viewDuration&quot;: 399,&#xd;
  &quot;stationId&quot;: &quot;tivo:st.370200433&quot;,&#xd;
  &quot;vodProviderId&quot;: &quot;tivo:pt.1234&quot;&#xd;
  }&#xd;
]&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/deviceViewEvents</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="51508">400</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="6. (neg) with missing itemId" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
 {&#xd;
  &quot;deviceType&quot;: &quot;managedCubiTv&quot;,&#xd;
  &quot;product&quot;: &quot;CubiTv&quot;,&#xd;
  &quot;queryId&quot;: &quot;5dasf2345701vgfs&quot;,&#xd;
  &quot;utcOffset&quot;: &quot;-0600&quot;,&#xd;
  &quot;country&quot;: &quot;USA&quot;,&#xd;
  &quot;type&quot;: &quot;LINEAR&quot;,&#xd;
  &quot;startTime&quot;: 1591898400000,&#xd;
  &quot;endTime&quot;: 1591900200000,&#xd;
  &quot;airingStartTime&quot;: 1591898400000,&#xd;
  &quot;startOffset&quot;: 1396,&#xd;
  &quot;endOffset&quot;: 1800,&#xd;
  &quot;contentDuration&quot;: 1800,&#xd;
  &quot;viewDuration&quot;: 399,&#xd;
  &quot;stationId&quot;: &quot;tivo:st.370200433&quot;,&#xd;
  &quot;vodProviderId&quot;: &quot;tivo:pt.1234&quot;&#xd;
  }&#xd;
]&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/deviceViewEvents</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="51508">400</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="7. (neg) with itemId=INVALID " enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
 {&#xd;
  &quot;deviceType&quot;: &quot;managedCubiTv&quot;,&#xd;
  &quot;product&quot;: &quot;CubiTv&quot;,&#xd;
  &quot;itemId&quot;: &quot;INVALID&quot;,&#xd;
  &quot;queryId&quot;: &quot;5dasf2345701vgfs&quot;,&#xd;
  &quot;utcOffset&quot;: &quot;-0600&quot;,&#xd;
  &quot;country&quot;: &quot;USA&quot;,&#xd;
  &quot;type&quot;: &quot;LINEAR&quot;,&#xd;
  &quot;startTime&quot;: 1591898400000,&#xd;
  &quot;endTime&quot;: 1591900200000,&#xd;
  &quot;airingStartTime&quot;: 1591898400000,&#xd;
  &quot;startOffset&quot;: 1396,&#xd;
  &quot;endOffset&quot;: 1800,&#xd;
  &quot;contentDuration&quot;: 1800,&#xd;
  &quot;viewDuration&quot;: 399,&#xd;
  &quot;stationId&quot;: &quot;tivo:st.370200433&quot;,&#xd;
  &quot;vodProviderId&quot;: &quot;tivo:pt.1234&quot;&#xd;
  }&#xd;
]&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/deviceViewEvents</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="51508">400</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="8. (neg) queryId=INVALID " enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
 {&#xd;
  &quot;deviceType&quot;: &quot;managedCubiTv&quot;,&#xd;
  &quot;product&quot;: &quot;CubiTv&quot;,&#xd;
  &quot;itemId&quot;: &quot;tivo:ct.49457168&quot;,&#xd;
  &quot;queryId&quot;: &quot;INVALID&quot;, &#xd;
  &quot;utcOffset&quot;: &quot;-0600&quot;,&#xd;
  &quot;country&quot;: &quot;USA&quot;,&#xd;
  &quot;type&quot;: &quot;LINEAR&quot;,&#xd;
  &quot;startTime&quot;: 1591898400000,&#xd;
  &quot;endTime&quot;: 1591900200000,&#xd;
  &quot;airingStartTime&quot;: 1591898400000,&#xd;
  &quot;startOffset&quot;: 1396,&#xd;
  &quot;endOffset&quot;: 1800,&#xd;
  &quot;contentDuration&quot;: 1800,&#xd;
  &quot;viewDuration&quot;: 399,&#xd;
  &quot;stationId&quot;: &quot;tivo:st.370200433&quot;,&#xd;
  &quot;vodProviderId&quot;: &quot;tivo:pt.1234&quot;&#xd;
  }&#xd;
]&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/deviceViewEvents</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="51508">400</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="9. with country=ISO 3166-1 alpha-3(PAN)" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
 {&#xd;
  &quot;deviceType&quot;: &quot;managedCubiTv&quot;,&#xd;
  &quot;product&quot;: &quot;CubiTv&quot;,&#xd;
  &quot;itemId&quot;: &quot;tivo:ct.49457168&quot;,&#xd;
  &quot;queryId&quot;: &quot;5dasf2345701vgfs&quot;,&#xd;
  &quot;utcOffset&quot;: &quot;-0600&quot;,&#xd;
  &quot;country&quot;: &quot;PAN&quot;,&#xd;
  &quot;type&quot;: &quot;LINEAR&quot;,&#xd;
  &quot;startTime&quot;: 1591898400000,&#xd;
  &quot;endTime&quot;: 1591900200000,&#xd;
  &quot;airingStartTime&quot;: 1591898400000,&#xd;
  &quot;startOffset&quot;: 1396,&#xd;
  &quot;endOffset&quot;: 1800,&#xd;
  &quot;contentDuration&quot;: 1800,&#xd;
  &quot;viewDuration&quot;: 399,&#xd;
  &quot;stationId&quot;: &quot;tivo:st.370200433&quot;,&#xd;
  &quot;vodProviderId&quot;: &quot;tivo:pt.1234&quot;&#xd;
  }&#xd;
]&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/deviceViewEvents</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49588">202</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="10. (neg) with country=ISO 3166-1 alpha-2(PN)" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
 {&#xd;
  &quot;deviceType&quot;: &quot;managedCubiTv&quot;,&#xd;
  &quot;product&quot;: &quot;CubiTv&quot;,&#xd;
  &quot;itemId&quot;: &quot;tivo:ct.49457168&quot;,&#xd;
  &quot;queryId&quot;: &quot;5dasf2345701vgfs&quot;,&#xd;
  &quot;utcOffset&quot;: &quot;-0600&quot;,&#xd;
  &quot;country&quot;: &quot;PN&quot;,&#xd;
  &quot;type&quot;: &quot;LINEAR&quot;,&#xd;
  &quot;startTime&quot;: 1591898400000,&#xd;
  &quot;endTime&quot;: 1591900200000,&#xd;
  &quot;airingStartTime&quot;: 1591898400000,&#xd;
  &quot;startOffset&quot;: 1396,&#xd;
  &quot;endOffset&quot;: 1800,&#xd;
  &quot;contentDuration&quot;: 1800,&#xd;
  &quot;viewDuration&quot;: 399,&#xd;
  &quot;stationId&quot;: &quot;tivo:st.370200433&quot;,&#xd;
  &quot;vodProviderId&quot;: &quot;tivo:pt.1234&quot;&#xd;
  }&#xd;
]&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/deviceViewEvents</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion    " enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="51508">400</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="11. When type=LINEAR" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
 {&#xd;
  &quot;deviceType&quot;: &quot;managedCubiTv&quot;,&#xd;
  &quot;product&quot;: &quot;CubiTv&quot;,&#xd;
  &quot;itemId&quot;: &quot;tivo:ct.49457168&quot;,&#xd;
  &quot;queryId&quot;: &quot;5dasf2345701vgfs&quot;,&#xd;
  &quot;utcOffset&quot;: &quot;-0600&quot;,&#xd;
  &quot;country&quot;: &quot;USA&quot;,&#xd;
  &quot;type&quot;: &quot;LINEAR&quot;,&#xd;
  &quot;startTime&quot;: 1591898400000,&#xd;
  &quot;endTime&quot;: 1591900200000,&#xd;
  &quot;airingStartTime&quot;: 1591898400000,&#xd;
  &quot;startOffset&quot;: 1396,&#xd;
  &quot;endOffset&quot;: 1800,&#xd;
  &quot;contentDuration&quot;: 1800,&#xd;
  &quot;viewDuration&quot;: 399,&#xd;
  &quot;stationId&quot;: &quot;tivo:st.370200433&quot;,&#xd;
  &quot;vodProviderId&quot;: &quot;tivo:pt.1234&quot;&#xd;
  }&#xd;
]&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/deviceViewEvents</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion " enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49588">202</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="12&#x9;When type=DVR_PLAY" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
 {&#xd;
  &quot;deviceType&quot;: &quot;managedCubiTv&quot;,&#xd;
  &quot;product&quot;: &quot;CubiTv&quot;,&#xd;
  &quot;itemId&quot;: &quot;tivo:ct.49457168&quot;,&#xd;
  &quot;queryId&quot;: &quot;5dasf2345701vgfs&quot;,&#xd;
  &quot;utcOffset&quot;: &quot;-0600&quot;,&#xd;
  &quot;country&quot;: &quot;USA&quot;,&#xd;
  &quot;type&quot;: &quot;DVR_PLAY&quot;,&#xd;
  &quot;startTime&quot;: 1591898400000,&#xd;
  &quot;endTime&quot;: 1591900200000,&#xd;
  &quot;airingStartTime&quot;: 1591898400000,&#xd;
  &quot;startOffset&quot;: 1396,&#xd;
  &quot;endOffset&quot;: 1800,&#xd;
  &quot;contentDuration&quot;: 1800,&#xd;
  &quot;viewDuration&quot;: 399,&#xd;
  &quot;stationId&quot;: &quot;tivo:st.370200433&quot;,&#xd;
  &quot;vodProviderId&quot;: &quot;tivo:pt.1234&quot;&#xd;
  }&#xd;
]&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/deviceViewEvents</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49588">202</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="13&#x9;When type=VOD_PURCHASE" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
 {&#xd;
  &quot;deviceType&quot;: &quot;managedCubiTv&quot;,&#xd;
  &quot;product&quot;: &quot;CubiTv&quot;,&#xd;
  &quot;itemId&quot;: &quot;tivo:ct.49457168&quot;,&#xd;
  &quot;queryId&quot;: &quot;5dasf2345701vgfs&quot;,&#xd;
  &quot;utcOffset&quot;: &quot;-0600&quot;,&#xd;
  &quot;country&quot;: &quot;USA&quot;,&#xd;
  &quot;type&quot;: &quot;VOD_PURCHASE&quot;,&#xd;
  &quot;startTime&quot;: 1591898400000,&#xd;
  &quot;endTime&quot;: 1591900200000,&#xd;
  &quot;airingStartTime&quot;: 1591898400000,&#xd;
  &quot;startOffset&quot;: 1396,&#xd;
  &quot;endOffset&quot;: 1800,&#xd;
  &quot;contentDuration&quot;: 1800,&#xd;
  &quot;viewDuration&quot;: 399,&#xd;
  &quot;stationId&quot;: &quot;tivo:st.370200433&quot;,&#xd;
  &quot;vodProviderId&quot;: &quot;tivo:pt.1234&quot;&#xd;
  }&#xd;
]&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/deviceViewEvents</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49588">202</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="14&#x9;When type=VOD_FREE" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
 {&#xd;
  &quot;deviceType&quot;: &quot;managedCubiTv&quot;,&#xd;
  &quot;product&quot;: &quot;CubiTv&quot;,&#xd;
  &quot;itemId&quot;: &quot;tivo:ct.49457168&quot;,&#xd;
  &quot;queryId&quot;: &quot;5dasf2345701vgfs&quot;,&#xd;
  &quot;utcOffset&quot;: &quot;-0600&quot;,&#xd;
  &quot;country&quot;: &quot;USA&quot;,&#xd;
  &quot;type&quot;: &quot;VOD_FREE&quot;,&#xd;
  &quot;startTime&quot;: 1591898400000,&#xd;
  &quot;endTime&quot;: 1591900200000,&#xd;
  &quot;airingStartTime&quot;: 1591898400000,&#xd;
  &quot;startOffset&quot;: 1396,&#xd;
  &quot;endOffset&quot;: 1800,&#xd;
  &quot;contentDuration&quot;: 1800,&#xd;
  &quot;viewDuration&quot;: 399,&#xd;
  &quot;stationId&quot;: &quot;tivo:st.370200433&quot;,&#xd;
  &quot;vodProviderId&quot;: &quot;tivo:pt.1234&quot;&#xd;
  }&#xd;
]&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/deviceViewEvents</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49588">202</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="15. (neg) When type=INVALID" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
 {&#xd;
  &quot;deviceType&quot;: &quot;managedCubiTv&quot;,&#xd;
  &quot;product&quot;: &quot;CubiTv&quot;,&#xd;
  &quot;itemId&quot;: &quot;tivo:ct.49457168&quot;,&#xd;
  &quot;queryId&quot;: &quot;5dasf2345701vgfs&quot;,&#xd;
  &quot;utcOffset&quot;: &quot;-0600&quot;,&#xd;
  &quot;country&quot;: &quot;USA&quot;,&#xd;
  &quot;type&quot;: &quot;INVALID&quot;,&#xd;
  &quot;startTime&quot;: 1591898400000,&#xd;
  &quot;endTime&quot;: 1591900200000,&#xd;
  &quot;airingStartTime&quot;: 1591898400000,&#xd;
  &quot;startOffset&quot;: 1396,&#xd;
  &quot;endOffset&quot;: 1800,&#xd;
  &quot;contentDuration&quot;: 1800,&#xd;
  &quot;viewDuration&quot;: 399,&#xd;
  &quot;stationId&quot;: &quot;tivo:st.370200433&quot;,&#xd;
  &quot;vodProviderId&quot;: &quot;tivo:pt.1234&quot;&#xd;
  }&#xd;
]&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/deviceViewEvents</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion " enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="51508">400</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="16. when startTime=&lt;now&gt; - 2mins and endTime=&lt;now&gt;" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
 {&#xd;
  &quot;deviceType&quot;: &quot;managedCubiTv&quot;,&#xd;
  &quot;product&quot;: &quot;CubiTv&quot;,&#xd;
  &quot;itemId&quot;: &quot;tivo:ct.49457168&quot;,&#xd;
  &quot;queryId&quot;: &quot;5dasf2345701vgfs&quot;,&#xd;
  &quot;utcOffset&quot;: &quot;-0600&quot;,&#xd;
  &quot;country&quot;: &quot;USA&quot;,&#xd;
  &quot;type&quot;: &quot;LINEAR&quot;,&#xd;
  &quot;startTime&quot;: ${startTime},&#xd;
  &quot;endTime&quot;: ${endTime},&#xd;
  &quot;airingStartTime&quot;: 1591898400000,&#xd;
  &quot;startOffset&quot;: 1396,&#xd;
  &quot;endOffset&quot;: 1800,&#xd;
  &quot;contentDuration&quot;: 1800,&#xd;
  &quot;viewDuration&quot;: 399,&#xd;
  &quot;stationId&quot;: &quot;tivo:st.370200433&quot;,&#xd;
  &quot;vodProviderId&quot;: &quot;tivo:pt.1234&quot;&#xd;
  }&#xd;
]&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/deviceViewEvents</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import java.time.Instant

Instant instant = Instant.now();
var now=instant.toEpochMilli();
vars.put(&quot;now&quot;,now.toString());
var min2 = 2 * 60 * 1000
vars.put(&quot;startTime&quot;,(now - min2).toString());
vars.put(&quot;endTime&quot;  ,now.toString());
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49588">202</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="17. (neg) when startTime=100" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
 {&#xd;
  &quot;deviceType&quot;: &quot;managedCubiTv&quot;,&#xd;
  &quot;product&quot;: &quot;CubiTv&quot;,&#xd;
  &quot;itemId&quot;: &quot;tivo:ct.49457168&quot;,&#xd;
  &quot;queryId&quot;: &quot;5dasf2345701vgfs&quot;,&#xd;
  &quot;utcOffset&quot;: &quot;-0600&quot;,&#xd;
  &quot;country&quot;: &quot;USA&quot;,&#xd;
  &quot;type&quot;: &quot;LINEAR&quot;,&#xd;
  &quot;startTime&quot;: 100,&#xd;
  &quot;endTime&quot;: 1591900200000,&#xd;
  &quot;airingStartTime&quot;: 1591898400000,&#xd;
  &quot;startOffset&quot;: 1396,&#xd;
  &quot;endOffset&quot;: 1800,&#xd;
  &quot;contentDuration&quot;: 1800,&#xd;
  &quot;viewDuration&quot;: 399,&#xd;
  &quot;stationId&quot;: &quot;tivo:st.370200433&quot;,&#xd;
  &quot;vodProviderId&quot;: &quot;tivo:pt.1234&quot;&#xd;
  }&#xd;
]&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/deviceViewEvents</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion    " enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="51508">400</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="18. when startTime=&lt;now&gt; - 3mins and endTime=&lt;now&gt; -1min" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
 {&#xd;
  &quot;deviceType&quot;: &quot;managedCubiTv&quot;,&#xd;
  &quot;product&quot;: &quot;CubiTv&quot;,&#xd;
  &quot;itemId&quot;: &quot;tivo:ct.49457168&quot;,&#xd;
  &quot;queryId&quot;: &quot;5dasf2345701vgfs&quot;,&#xd;
  &quot;utcOffset&quot;: &quot;-0600&quot;,&#xd;
  &quot;country&quot;: &quot;USA&quot;,&#xd;
  &quot;type&quot;: &quot;LINEAR&quot;,&#xd;
  &quot;startTime&quot;: ${startTime},&#xd;
  &quot;endTime&quot;: ${endTime},&#xd;
  &quot;airingStartTime&quot;: 1591898400000,&#xd;
  &quot;startOffset&quot;: 1396,&#xd;
  &quot;endOffset&quot;: 1800,&#xd;
  &quot;contentDuration&quot;: 1800,&#xd;
  &quot;viewDuration&quot;: 399,&#xd;
  &quot;stationId&quot;: &quot;tivo:st.370200433&quot;,&#xd;
  &quot;vodProviderId&quot;: &quot;tivo:pt.1234&quot;&#xd;
  }&#xd;
]&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/deviceViewEvents</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import java.time.Instant

Instant instant = Instant.now();
var now=instant.toEpochMilli();
vars.put(&quot;now&quot;,now.toString());
var min3 = 2 * 60 * 1000
var min1 = 1 * 60 * 1000
vars.put(&quot;startTime&quot;,(now - min3).toString());
vars.put(&quot;endTime&quot;  ,(now - min1).toString());
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49588">202</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="19. (neg) when endTime=100" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
 {&#xd;
  &quot;deviceType&quot;: &quot;managedCubiTv&quot;,&#xd;
  &quot;product&quot;: &quot;CubiTv&quot;,&#xd;
  &quot;itemId&quot;: &quot;tivo:ct.49457168&quot;,&#xd;
  &quot;queryId&quot;: &quot;5dasf2345701vgfs&quot;,&#xd;
  &quot;utcOffset&quot;: &quot;-0600&quot;,&#xd;
  &quot;country&quot;: &quot;USA&quot;,&#xd;
  &quot;type&quot;: &quot;LINEAR&quot;,&#xd;
  &quot;startTime&quot;: 1591898400000,&#xd;
  &quot;endTime&quot;: 100,&#xd;
  &quot;airingStartTime&quot;: 1591898400000,&#xd;
  &quot;startOffset&quot;: 1396,&#xd;
  &quot;endOffset&quot;: 1800,&#xd;
  &quot;contentDuration&quot;: 1800,&#xd;
  &quot;viewDuration&quot;: 399,&#xd;
  &quot;stationId&quot;: &quot;tivo:st.370200433&quot;,&#xd;
  &quot;vodProviderId&quot;: &quot;tivo:pt.1234&quot;&#xd;
  }&#xd;
]&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/deviceViewEvents</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion    " enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="51508">400</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="20. (neg)when startTime=endTime" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
 {&#xd;
  &quot;deviceType&quot;: &quot;managedCubiTv&quot;,&#xd;
  &quot;product&quot;: &quot;CubiTv&quot;,&#xd;
  &quot;itemId&quot;: &quot;tivo:ct.49457168&quot;,&#xd;
  &quot;queryId&quot;: &quot;5dasf2345701vgfs&quot;,&#xd;
  &quot;utcOffset&quot;: &quot;-0600&quot;,&#xd;
  &quot;country&quot;: &quot;USA&quot;,&#xd;
  &quot;type&quot;: &quot;LINEAR&quot;,&#xd;
  &quot;startTime&quot;: ${now},&#xd;
  &quot;endTime&quot;: ${now},&#xd;
  &quot;airingStartTime&quot;: 1591898400000,&#xd;
  &quot;startOffset&quot;: 1396,&#xd;
  &quot;endOffset&quot;: 1800,&#xd;
  &quot;contentDuration&quot;: 1800,&#xd;
  &quot;viewDuration&quot;: 399,&#xd;
  &quot;stationId&quot;: &quot;tivo:st.370200433&quot;,&#xd;
  &quot;vodProviderId&quot;: &quot;tivo:pt.1234&quot;&#xd;
  }&#xd;
]&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/deviceViewEvents</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import java.time.Instant

Instant instant = Instant.now();
var now=instant.toEpochMilli();
var min3 = 2 * 60 * 1000
var min1 = 1 * 60 * 1000
vars.put(&quot;now&quot;,now.toString());
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="51508">400</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="21. (neg)when startTime&gt;endTime" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
 {&#xd;
  &quot;deviceType&quot;: &quot;managedCubiTv&quot;,&#xd;
  &quot;product&quot;: &quot;CubiTv&quot;,&#xd;
  &quot;itemId&quot;: &quot;tivo:ct.49457168&quot;,&#xd;
  &quot;queryId&quot;: &quot;5dasf2345701vgfs&quot;,&#xd;
  &quot;utcOffset&quot;: &quot;-0600&quot;,&#xd;
  &quot;country&quot;: &quot;USA&quot;,&#xd;
  &quot;type&quot;: &quot;LINEAR&quot;,&#xd;
  &quot;startTime&quot;: ${startTime},&#xd;
  &quot;endTime&quot;: ${endTime},&#xd;
  &quot;airingStartTime&quot;: 1591898400000,&#xd;
  &quot;startOffset&quot;: 1396,&#xd;
  &quot;endOffset&quot;: 1800,&#xd;
  &quot;contentDuration&quot;: 1800,&#xd;
  &quot;viewDuration&quot;: 399,&#xd;
  &quot;stationId&quot;: &quot;tivo:st.370200433&quot;,&#xd;
  &quot;vodProviderId&quot;: &quot;tivo:pt.1234&quot;&#xd;
  }&#xd;
]&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/deviceViewEvents</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import java.time.Instant

Instant instant = Instant.now();
var now=instant.toEpochMilli();
var min10 = 10 * 60 * 1000
vars.put(&quot;now&quot;,now.toString());
vars.put(&quot;startTime&quot;,(now + min10).toString());
vars.put(&quot;endTime&quot;,   now.toString());
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="51508">400</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="22. when airingStartTime=startTime" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
 {&#xd;
  &quot;deviceType&quot;: &quot;managedCubiTv&quot;,&#xd;
  &quot;product&quot;: &quot;CubiTv&quot;,&#xd;
  &quot;itemId&quot;: &quot;tivo:ct.49457168&quot;,&#xd;
  &quot;queryId&quot;: &quot;5dasf2345701vgfs&quot;,&#xd;
  &quot;utcOffset&quot;: &quot;-0600&quot;,&#xd;
  &quot;country&quot;: &quot;USA&quot;,&#xd;
  &quot;type&quot;: &quot;LINEAR&quot;,&#xd;
  &quot;startTime&quot;: ${startTime},&#xd;
  &quot;endTime&quot;: ${endTime},&#xd;
  &quot;airingStartTime&quot;: ${airingStartTime},&#xd;
  &quot;startOffset&quot;: 1396,&#xd;
  &quot;endOffset&quot;: 1800,&#xd;
  &quot;contentDuration&quot;: 1800,&#xd;
  &quot;viewDuration&quot;: 399,&#xd;
  &quot;stationId&quot;: &quot;tivo:st.370200433&quot;,&#xd;
  &quot;vodProviderId&quot;: &quot;tivo:pt.1234&quot;&#xd;
  }&#xd;
]&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/deviceViewEvents</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import java.time.Instant

Instant instant = Instant.now();
var now=instant.toEpochMilli();
var min10 = 10 * 60 * 1000
vars.put(&quot;now&quot;,now.toString());
vars.put(&quot;airingStartTime&quot;, now.toString());
vars.put(&quot;startTime&quot;,       now.toString());
vars.put(&quot;endTime&quot;,         (now + min10).toString());
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49588">202</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="23. When airingStartTime = 10 days before startTime" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
 {&#xd;
  &quot;deviceType&quot;: &quot;managedCubiTv&quot;,&#xd;
  &quot;product&quot;: &quot;CubiTv&quot;,&#xd;
  &quot;itemId&quot;: &quot;tivo:ct.49457168&quot;,&#xd;
  &quot;queryId&quot;: &quot;5dasf2345701vgfs&quot;,&#xd;
  &quot;utcOffset&quot;: &quot;-0600&quot;,&#xd;
  &quot;country&quot;: &quot;USA&quot;,&#xd;
  &quot;type&quot;: &quot;LINEAR&quot;,&#xd;
  &quot;startTime&quot;: ${startTime},&#xd;
  &quot;endTime&quot;: ${endTime},&#xd;
  &quot;airingStartTime&quot;: ${airingStartTime},&#xd;
  &quot;startOffset&quot;: 1396,&#xd;
  &quot;endOffset&quot;: 1800,&#xd;
  &quot;contentDuration&quot;: 1800,&#xd;
  &quot;viewDuration&quot;: 399,&#xd;
  &quot;stationId&quot;: &quot;tivo:st.370200433&quot;,&#xd;
  &quot;vodProviderId&quot;: &quot;tivo:pt.1234&quot;&#xd;
  }&#xd;
]&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/deviceViewEvents</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import java.time.Instant

Instant instant = Instant.now();
var now=instant.toEpochMilli();
var min10 = 10 * 60 * 1000
var day10 = 10 24 * 60 *  60 * 1000
vars.put(&quot;now&quot;,now.toString());
vars.put(&quot;airingStartTime&quot;, (now - day10).toString());
vars.put(&quot;startTime&quot;,       now.toString());
vars.put(&quot;endTime&quot;,         (now + min10).toString());
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49588">202</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="24. (neg)When airingTime is in Future" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
 {&#xd;
  &quot;deviceType&quot;: &quot;managedCubiTv&quot;,&#xd;
  &quot;product&quot;: &quot;CubiTv&quot;,&#xd;
  &quot;itemId&quot;: &quot;tivo:ct.49457168&quot;,&#xd;
  &quot;queryId&quot;: &quot;5dasf2345701vgfs&quot;,&#xd;
  &quot;utcOffset&quot;: &quot;-0600&quot;,&#xd;
  &quot;country&quot;: &quot;USA&quot;,&#xd;
  &quot;type&quot;: &quot;LINEAR&quot;,&#xd;
  &quot;startTime&quot;: ${startTime},&#xd;
  &quot;endTime&quot;: ${endTime},&#xd;
  &quot;airingStartTime&quot;: ${airingStartTime},&#xd;
  &quot;startOffset&quot;: 1396,&#xd;
  &quot;endOffset&quot;: 1800,&#xd;
  &quot;contentDuration&quot;: 1800,&#xd;
  &quot;viewDuration&quot;: 399,&#xd;
  &quot;stationId&quot;: &quot;tivo:st.370200433&quot;,&#xd;
  &quot;vodProviderId&quot;: &quot;tivo:pt.1234&quot;&#xd;
  }&#xd;
]&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/deviceViewEvents</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import java.time.Instant

Instant instant = Instant.now();
var now=instant.toEpochMilli();
var min10 = 10 * 60 * 1000
var day10 = 10 24 * 60 *  60 * 1000
vars.put(&quot;now&quot;,now.toString());
vars.put(&quot;airingStartTime&quot;, (now + day10).toString());
vars.put(&quot;startTime&quot;,       now.toString());
vars.put(&quot;endTime&quot;,         (now + min10).toString());
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="51508">400</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="25. (neg)when airingStartTime is not given for Linear" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
 {&#xd;
  &quot;deviceType&quot;: &quot;managedCubiTv&quot;,&#xd;
  &quot;product&quot;: &quot;CubiTv&quot;,&#xd;
  &quot;itemId&quot;: &quot;tivo:ct.49457168&quot;,&#xd;
  &quot;queryId&quot;: &quot;5dasf2345701vgfs&quot;,&#xd;
  &quot;utcOffset&quot;: &quot;-0600&quot;,&#xd;
  &quot;country&quot;: &quot;USA&quot;,&#xd;
  &quot;type&quot;: &quot;LINEAR&quot;,&#xd;
  &quot;startTime&quot;: ${startTime},&#xd;
  &quot;endTime&quot;: ${endTime},&#xd;
  &quot;startOffset&quot;: 1396,&#xd;
  &quot;endOffset&quot;: 1800,&#xd;
  &quot;contentDuration&quot;: 1800,&#xd;
  &quot;viewDuration&quot;: 399,&#xd;
  &quot;stationId&quot;: &quot;tivo:st.370200433&quot;,&#xd;
  &quot;vodProviderId&quot;: &quot;tivo:pt.1234&quot;&#xd;
  }&#xd;
]&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/deviceViewEvents</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import java.time.Instant

Instant instant = Instant.now();
var now=instant.toEpochMilli();
var day10 = 10 24 * 60 *  60 * 1000
vars.put(&quot;now&quot;,now.toString());
vars.put(&quot;airingStartTime&quot;, (now + day10).toString());
vars.put(&quot;startTime&quot;,       now.toString());
vars.put(&quot;endTime&quot;,         (now.toString());
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="51508">400</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="26. (neg)when airingStartTime is not given for DVR_PLAY" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
 {&#xd;
  &quot;deviceType&quot;: &quot;managedCubiTv&quot;,&#xd;
  &quot;product&quot;: &quot;CubiTv&quot;,&#xd;
  &quot;itemId&quot;: &quot;tivo:ct.49457168&quot;,&#xd;
  &quot;queryId&quot;: &quot;5dasf2345701vgfs&quot;,&#xd;
  &quot;utcOffset&quot;: &quot;-0600&quot;,&#xd;
  &quot;country&quot;: &quot;USA&quot;,&#xd;
  &quot;type&quot;: &quot;DVR_PLAY&quot;,&#xd;
  &quot;startTime&quot;: ${startTime},&#xd;
  &quot;endTime&quot;: ${endTime},&#xd;
  &quot;startOffset&quot;: 1396,&#xd;
  &quot;endOffset&quot;: 1800,&#xd;
  &quot;contentDuration&quot;: 1800,&#xd;
  &quot;viewDuration&quot;: 399,&#xd;
  &quot;stationId&quot;: &quot;tivo:st.370200433&quot;,&#xd;
  &quot;vodProviderId&quot;: &quot;tivo:pt.1234&quot;&#xd;
  }&#xd;
]&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/deviceViewEvents</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import java.time.Instant

Instant instant = Instant.now();
var now=instant.toEpochMilli();
var day10 = 10 24 * 60 *  60 * 1000
vars.put(&quot;now&quot;,now.toString());
vars.put(&quot;airingStartTime&quot;, (now + day10).toString());
vars.put(&quot;startTime&quot;,       now.toString());
vars.put(&quot;endTime&quot;,         (now.toString());
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="51508">400</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="27&#x9;when startOffset == 0 " enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
 {&#xd;
  &quot;deviceType&quot;: &quot;managedCubiTv&quot;,&#xd;
  &quot;product&quot;: &quot;CubiTv&quot;,&#xd;
  &quot;itemId&quot;: &quot;tivo:ct.49457168&quot;,&#xd;
  &quot;queryId&quot;: &quot;5dasf2345701vgfs&quot;,&#xd;
  &quot;utcOffset&quot;: &quot;-0600&quot;,&#xd;
  &quot;country&quot;: &quot;USA&quot;,&#xd;
  &quot;type&quot;: &quot;LINEAR&quot;,&#xd;
  &quot;startTime&quot;: ${startTime},&#xd;
  &quot;endTime&quot;: ${endTime},&#xd;
  &quot;airingStartTime&quot;: ${airingStartTime},&#xd;
  &quot;startOffset&quot;: 0,&#xd;
  &quot;endOffset&quot;: 1800,&#xd;
  &quot;contentDuration&quot;: 1800,&#xd;
  &quot;viewDuration&quot;: 399,&#xd;
  &quot;stationId&quot;: &quot;tivo:st.370200433&quot;,&#xd;
  &quot;vodProviderId&quot;: &quot;tivo:pt.1234&quot;&#xd;
  }&#xd;
]&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/deviceViewEvents</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import java.time.Instant

Instant instant = Instant.now();
var now=instant.toEpochMilli();
var min10 = 10 * 60 * 1000
var day10 = 10 24 * 60 *  60 * 1000
vars.put(&quot;now&quot;,now.toString());
vars.put(&quot;airingStartTime&quot;, (now - day10).toString());
vars.put(&quot;startTime&quot;,       now.toString());
vars.put(&quot;endTime&quot;,         (now + min10).toString());
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49588">202</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="28&#x9;when startOffset == 10 (and contentDuration = 30mins)" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
 {&#xd;
  &quot;deviceType&quot;: &quot;managedCubiTv&quot;,&#xd;
  &quot;product&quot;: &quot;CubiTv&quot;,&#xd;
  &quot;itemId&quot;: &quot;tivo:ct.49457168&quot;,&#xd;
  &quot;queryId&quot;: &quot;5dasf2345701vgfs&quot;,&#xd;
  &quot;utcOffset&quot;: &quot;-0600&quot;,&#xd;
  &quot;country&quot;: &quot;USA&quot;,&#xd;
  &quot;type&quot;: &quot;LINEAR&quot;,&#xd;
  &quot;startTime&quot;: ${startTime},&#xd;
  &quot;endTime&quot;: ${endTime},&#xd;
  &quot;airingStartTime&quot;: ${airingStartTime},&#xd;
  &quot;startOffset&quot;: 10,&#xd;
  &quot;endOffset&quot;: 1800,&#xd;
  &quot;contentDuration&quot;: 1800,&#xd;
  &quot;viewDuration&quot;: 399,&#xd;
  &quot;stationId&quot;: &quot;tivo:st.370200433&quot;,&#xd;
  &quot;vodProviderId&quot;: &quot;tivo:pt.1234&quot;&#xd;
  }&#xd;
]&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/deviceViewEvents</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import java.time.Instant

Instant instant = Instant.now();
var now=instant.toEpochMilli();
var min10 = 10 * 60 * 1000
var day10 = 10 24 * 60 *  60 * 1000
vars.put(&quot;now&quot;,now.toString());
vars.put(&quot;airingStartTime&quot;, (now - day10).toString());
vars.put(&quot;startTime&quot;,       now.toString());
vars.put(&quot;endTime&quot;,         (now + min10).toString());
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49588">202</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="29&#x9;(neg)when startOffset &gt; contentDuration" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
 {&#xd;
  &quot;deviceType&quot;: &quot;managedCubiTv&quot;,&#xd;
  &quot;product&quot;: &quot;CubiTv&quot;,&#xd;
  &quot;itemId&quot;: &quot;tivo:ct.49457168&quot;,&#xd;
  &quot;queryId&quot;: &quot;5dasf2345701vgfs&quot;,&#xd;
  &quot;utcOffset&quot;: &quot;-0600&quot;,&#xd;
  &quot;country&quot;: &quot;USA&quot;,&#xd;
  &quot;type&quot;: &quot;LINEAR&quot;,&#xd;
  &quot;startTime&quot;: ${startTime},&#xd;
  &quot;endTime&quot;: ${endTime},&#xd;
  &quot;airingStartTime&quot;: ${airingStartTime},&#xd;
  &quot;startOffset&quot;: 3600,&#xd;
  &quot;endOffset&quot;: 1800,&#xd;
  &quot;contentDuration&quot;: 1800,&#xd;
  &quot;viewDuration&quot;: 399,&#xd;
  &quot;stationId&quot;: &quot;tivo:st.370200433&quot;,&#xd;
  &quot;vodProviderId&quot;: &quot;tivo:pt.1234&quot;&#xd;
  }&#xd;
]&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/deviceViewEvents</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import java.time.Instant

Instant instant = Instant.now();
var now=instant.toEpochMilli();
var min10 = 10 * 60 * 1000
var day10 = 10 24 * 60 *  60 * 1000
vars.put(&quot;now&quot;,now.toString());
vars.put(&quot;airingStartTime&quot;, (now - day10).toString());
vars.put(&quot;startTime&quot;,       now.toString());
vars.put(&quot;endTime&quot;,         (now + min10).toString());
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="51508">400</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="30&#x9;when endOffset == 0" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
 {&#xd;
  &quot;deviceType&quot;: &quot;managedCubiTv&quot;,&#xd;
  &quot;product&quot;: &quot;CubiTv&quot;,&#xd;
  &quot;itemId&quot;: &quot;tivo:ct.49457168&quot;,&#xd;
  &quot;queryId&quot;: &quot;5dasf2345701vgfs&quot;,&#xd;
  &quot;utcOffset&quot;: &quot;-0600&quot;,&#xd;
  &quot;country&quot;: &quot;USA&quot;,&#xd;
  &quot;type&quot;: &quot;LINEAR&quot;,&#xd;
  &quot;startTime&quot;: ${startTime},&#xd;
  &quot;endTime&quot;: ${endTime},&#xd;
  &quot;airingStartTime&quot;: ${airingStartTime},&#xd;
  &quot;startOffset&quot;: 3600,&#xd;
  &quot;endOffset&quot;: 0,&#xd;
  &quot;contentDuration&quot;: 1800,&#xd;
  &quot;viewDuration&quot;: 399,&#xd;
  &quot;stationId&quot;: &quot;tivo:st.370200433&quot;,&#xd;
  &quot;vodProviderId&quot;: &quot;tivo:pt.1234&quot;&#xd;
  }&#xd;
]&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/deviceViewEvents</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import java.time.Instant

Instant instant = Instant.now();
var now=instant.toEpochMilli();
var min10 = 10 * 60 * 1000
var day10 = 10 24 * 60 *  60 * 1000
vars.put(&quot;now&quot;,now.toString());
vars.put(&quot;airingStartTime&quot;, (now - day10).toString());
vars.put(&quot;startTime&quot;,       now.toString());
vars.put(&quot;endTime&quot;,         (now + min10).toString());
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49588">202</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="31&#x9;when endOffset== 10 (and contentDuration = 30mins)" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
 {&#xd;
  &quot;deviceType&quot;: &quot;managedCubiTv&quot;,&#xd;
  &quot;product&quot;: &quot;CubiTv&quot;,&#xd;
  &quot;itemId&quot;: &quot;tivo:ct.49457168&quot;,&#xd;
  &quot;queryId&quot;: &quot;5dasf2345701vgfs&quot;,&#xd;
  &quot;utcOffset&quot;: &quot;-0600&quot;,&#xd;
  &quot;country&quot;: &quot;USA&quot;,&#xd;
  &quot;type&quot;: &quot;LINEAR&quot;,&#xd;
  &quot;startTime&quot;: ${startTime},&#xd;
  &quot;endTime&quot;: ${endTime},&#xd;
  &quot;airingStartTime&quot;: ${airingStartTime},&#xd;
  &quot;startOffset&quot;: 1396,&#xd;
  &quot;endOffset&quot;: 10,&#xd;
  &quot;contentDuration&quot;: 1800,&#xd;
  &quot;viewDuration&quot;: 399,&#xd;
  &quot;stationId&quot;: &quot;tivo:st.370200433&quot;,&#xd;
  &quot;vodProviderId&quot;: &quot;tivo:pt.1234&quot;&#xd;
  }&#xd;
]&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/deviceViewEvents</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import java.time.Instant

Instant instant = Instant.now();
var now=instant.toEpochMilli();
var min10 = 10 * 60 * 1000
var day10 = 10 24 * 60 *  60 * 1000
vars.put(&quot;now&quot;,now.toString());
vars.put(&quot;airingStartTime&quot;, (now - day10).toString());
vars.put(&quot;startTime&quot;,       now.toString());
vars.put(&quot;endTime&quot;,         (now + min10).toString());
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49588">202</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="32&#x9;(neg)When startTime=FutureTime " enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
 {&#xd;
  &quot;deviceType&quot;: &quot;managedCubiTv&quot;,&#xd;
  &quot;product&quot;: &quot;CubiTv&quot;,&#xd;
  &quot;itemId&quot;: &quot;tivo:ct.49457168&quot;,&#xd;
  &quot;queryId&quot;: &quot;5dasf2345701vgfs&quot;,&#xd;
  &quot;utcOffset&quot;: &quot;-0600&quot;,&#xd;
  &quot;country&quot;: &quot;USA&quot;,&#xd;
  &quot;type&quot;: &quot;LINEAR&quot;,&#xd;
  &quot;startTime&quot;: ${startTime},&#xd;
  &quot;endTime&quot;: ${endTime},&#xd;
  &quot;airingStartTime&quot;: ${airingStartTime},&#xd;
  &quot;startOffset&quot;: 1396,&#xd;
  &quot;endOffset&quot;: 10,&#xd;
  &quot;contentDuration&quot;: 1800,&#xd;
  &quot;viewDuration&quot;: 399,&#xd;
  &quot;stationId&quot;: &quot;tivo:st.370200433&quot;,&#xd;
  &quot;vodProviderId&quot;: &quot;tivo:pt.1234&quot;&#xd;
  }&#xd;
]&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/deviceViewEvents</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import java.time.Instant

Instant instant = Instant.now();
var now=instant.toEpochMilli();
var min10 = 10 * 60 * 1000
var day10 = 10 24 * 60 *  60 * 1000
vars.put(&quot;now&quot;,now.toString());
vars.put(&quot;airingStartTime&quot;, (now - day10).toString());
vars.put(&quot;startTime&quot;,       (now + day10).toString());
vars.put(&quot;endTime&quot;,         now.toString());
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="51508">400</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="33&#x9;(neg) when endOffset &gt; (contentDuration)" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
 {&#xd;
  &quot;deviceType&quot;: &quot;managedCubiTv&quot;,&#xd;
  &quot;product&quot;: &quot;CubiTv&quot;,&#xd;
  &quot;itemId&quot;: &quot;tivo:ct.49457168&quot;,&#xd;
  &quot;queryId&quot;: &quot;5dasf2345701vgfs&quot;,&#xd;
  &quot;utcOffset&quot;: &quot;-0600&quot;,&#xd;
  &quot;country&quot;: &quot;USA&quot;,&#xd;
  &quot;type&quot;: &quot;LINEAR&quot;,&#xd;
  &quot;startTime&quot;: ${startTime},&#xd;
  &quot;endTime&quot;: ${endTime},&#xd;
  &quot;airingStartTime&quot;: ${airingStartTime},&#xd;
  &quot;startOffset&quot;: 1396,&#xd;
  &quot;endOffset&quot;: 3600,&#xd;
  &quot;contentDuration&quot;: 1800,&#xd;
  &quot;viewDuration&quot;: 399,&#xd;
  &quot;stationId&quot;: &quot;tivo:st.370200433&quot;,&#xd;
  &quot;vodProviderId&quot;: &quot;tivo:pt.1234&quot;&#xd;
  }&#xd;
]&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/deviceViewEvents</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import java.time.Instant

Instant instant = Instant.now();
var now=instant.toEpochMilli();
var min10 = 10 * 60 * 1000
var day10 = 10 24 * 60 *  60 * 1000
vars.put(&quot;now&quot;,now.toString());
vars.put(&quot;airingStartTime&quot;, (now - day10).toString());
vars.put(&quot;startTime&quot;,       (now).toString());
vars.put(&quot;endTime&quot;,         (now + 1800).toString());
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="51508">400</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="34&#x9;when viewDuration = 30 seconds and contentDuration=30mins" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
 {&#xd;
  &quot;deviceType&quot;: &quot;managedCubiTv&quot;,&#xd;
  &quot;product&quot;: &quot;CubiTv&quot;,&#xd;
  &quot;itemId&quot;: &quot;tivo:ct.49457168&quot;,&#xd;
  &quot;queryId&quot;: &quot;5dasf2345701vgfs&quot;,&#xd;
  &quot;utcOffset&quot;: &quot;-0600&quot;,&#xd;
  &quot;country&quot;: &quot;USA&quot;,&#xd;
  &quot;type&quot;: &quot;LINEAR&quot;,&#xd;
  &quot;startTime&quot;: ${startTime},&#xd;
  &quot;endTime&quot;: ${endTime},&#xd;
  &quot;airingStartTime&quot;: ${airingStartTime},&#xd;
  &quot;startOffset&quot;: 1396,&#xd;
  &quot;endOffset&quot;: 3600,&#xd;
  &quot;contentDuration&quot;: 1800,&#xd;
  &quot;viewDuration&quot;: 30,&#xd;
  &quot;stationId&quot;: &quot;tivo:st.370200433&quot;,&#xd;
  &quot;vodProviderId&quot;: &quot;tivo:pt.1234&quot;&#xd;
  }&#xd;
]&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/deviceViewEvents</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import java.time.Instant

Instant instant = Instant.now();
var now=instant.toEpochMilli();
var min10 = 10 * 60 * 1000
var day10 = 10 24 * 60 *  60 * 1000
vars.put(&quot;now&quot;,now.toString());
vars.put(&quot;airingStartTime&quot;, (now - day10).toString());
vars.put(&quot;startTime&quot;,       (now).toString());
vars.put(&quot;endTime&quot;,         (now + 1800).toString());
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49588">202</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="35. When viewDuration=30mins and contentDuration=30mins " enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
 {&#xd;
  &quot;deviceType&quot;: &quot;managedCubiTv&quot;,&#xd;
  &quot;product&quot;: &quot;CubiTv&quot;,&#xd;
  &quot;itemId&quot;: &quot;tivo:ct.49457168&quot;,&#xd;
  &quot;queryId&quot;: &quot;5dasf2345701vgfs&quot;,&#xd;
  &quot;utcOffset&quot;: &quot;-0600&quot;,&#xd;
  &quot;country&quot;: &quot;USA&quot;,&#xd;
  &quot;type&quot;: &quot;LINEAR&quot;,&#xd;
  &quot;startTime&quot;: ${startTime},&#xd;
  &quot;endTime&quot;: ${endTime},&#xd;
  &quot;airingStartTime&quot;: ${airingStartTime},&#xd;
  &quot;startOffset&quot;: 1396,&#xd;
  &quot;endOffset&quot;: 3600,&#xd;
  &quot;contentDuration&quot;: 1800,&#xd;
  &quot;viewDuration&quot;: 1800,&#xd;
  &quot;stationId&quot;: &quot;tivo:st.370200433&quot;,&#xd;
  &quot;vodProviderId&quot;: &quot;tivo:pt.1234&quot;&#xd;
  }&#xd;
]&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/deviceViewEvents</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import java.time.Instant

Instant instant = Instant.now();
var now=instant.toEpochMilli();
var min10 = 10 * 60 * 1000
var day10 = 10 24 * 60 *  60 * 1000
vars.put(&quot;now&quot;,now.toString());
vars.put(&quot;airingStartTime&quot;, (now - day10).toString());
vars.put(&quot;startTime&quot;,       (now).toString());
vars.put(&quot;endTime&quot;,         (now + 1800).toString());
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49588">202</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="36&#x9; (neg)when viewDuration == 0  and contentDuration=30mins" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
 {&#xd;
  &quot;deviceType&quot;: &quot;managedCubiTv&quot;,&#xd;
  &quot;product&quot;: &quot;CubiTv&quot;,&#xd;
  &quot;itemId&quot;: &quot;tivo:ct.49457168&quot;,&#xd;
  &quot;queryId&quot;: &quot;5dasf2345701vgfs&quot;,&#xd;
  &quot;utcOffset&quot;: &quot;-0600&quot;,&#xd;
  &quot;country&quot;: &quot;USA&quot;,&#xd;
  &quot;type&quot;: &quot;LINEAR&quot;,&#xd;
  &quot;startTime&quot;: ${startTime},&#xd;
  &quot;endTime&quot;: ${endTime},&#xd;
  &quot;airingStartTime&quot;: ${airingStartTime},&#xd;
  &quot;startOffset&quot;: 1396,&#xd;
  &quot;endOffset&quot;: 3600,&#xd;
  &quot;contentDuration&quot;: 1800,&#xd;
  &quot;viewDuration&quot;: 0,&#xd;
  &quot;stationId&quot;: &quot;tivo:st.370200433&quot;,&#xd;
  &quot;vodProviderId&quot;: &quot;tivo:pt.1234&quot;&#xd;
  }&#xd;
]&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/deviceViewEvents</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import java.time.Instant

Instant instant = Instant.now();
var now=instant.toEpochMilli();
var min10 = 10 * 60 * 1000
var day10 = 10 24 * 60 *  60 * 1000
vars.put(&quot;now&quot;,now.toString());
vars.put(&quot;airingStartTime&quot;, (now - day10).toString());
vars.put(&quot;startTime&quot;,       (now).toString());
vars.put(&quot;endTime&quot;,         (now + 1800).toString());
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="51508">400</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="37&#x9;when viewDuration  &gt; (endTime - startTime)/1000" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
 {&#xd;
  &quot;deviceType&quot;: &quot;managedCubiTv&quot;,&#xd;
  &quot;product&quot;: &quot;CubiTv&quot;,&#xd;
  &quot;itemId&quot;: &quot;tivo:ct.49457168&quot;,&#xd;
  &quot;queryId&quot;: &quot;5dasf2345701vgfs&quot;,&#xd;
  &quot;utcOffset&quot;: &quot;-0600&quot;,&#xd;
  &quot;country&quot;: &quot;USA&quot;,&#xd;
  &quot;type&quot;: &quot;LINEAR&quot;,&#xd;
  &quot;startTime&quot;: ${startTime},&#xd;
  &quot;endTime&quot;: ${endTime},&#xd;
  &quot;airingStartTime&quot;: ${airingStartTime},&#xd;
  &quot;startOffset&quot;: 1396,&#xd;
  &quot;endOffset&quot;: 3600,&#xd;
  &quot;contentDuration&quot;: 1800,&#xd;
  &quot;viewDuration&quot;: ${viewDuration},&#xd;
  &quot;stationId&quot;: &quot;tivo:st.370200433&quot;,&#xd;
  &quot;vodProviderId&quot;: &quot;tivo:pt.1234&quot;&#xd;
  }&#xd;
]&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/deviceViewEvents</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import java.time.Instant

Instant instant = Instant.now();
var now=instant.toEpochMilli();
var min10 = 10 * 60 * 1000
var day10 = 10 24 * 60 *  60 * 1000
vars.put(&quot;now&quot;,now.toString());
vars.put(&quot;airingStartTime&quot;, (now - day10).toString());
var startTime = now
var endTime   = now + 1800
// startTime - endTime == 1800
var viewDuration = 3600 
vars.put(&quot;startTime&quot;,       startTime.toString());
vars.put(&quot;endTime&quot;,         endTime.toString());
vars.put(&quot;viewDuration&quot;,    viewDuration);
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49588">202</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="38&#x9;when viewDuration = contentDuration " enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
 {&#xd;
  &quot;deviceType&quot;: &quot;managedCubiTv&quot;,&#xd;
  &quot;product&quot;: &quot;CubiTv&quot;,&#xd;
  &quot;itemId&quot;: &quot;tivo:ct.49457168&quot;,&#xd;
  &quot;queryId&quot;: &quot;5dasf2345701vgfs&quot;,&#xd;
  &quot;utcOffset&quot;: &quot;-0600&quot;,&#xd;
  &quot;country&quot;: &quot;USA&quot;,&#xd;
  &quot;type&quot;: &quot;LINEAR&quot;,&#xd;
  &quot;startTime&quot;: ${startTime},&#xd;
  &quot;endTime&quot;: ${endTime},&#xd;
  &quot;airingStartTime&quot;: ${airingStartTime},&#xd;
  &quot;startOffset&quot;: 1396,&#xd;
  &quot;endOffset&quot;: 3600,&#xd;
  &quot;contentDuration&quot;: 3600,&#xd;
  &quot;viewDuration&quot;: 3600,&#xd;
  &quot;stationId&quot;: &quot;tivo:st.370200433&quot;,&#xd;
  &quot;vodProviderId&quot;: &quot;tivo:pt.1234&quot;&#xd;
  }&#xd;
]&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/deviceViewEvents</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import java.time.Instant

Instant instant = Instant.now();
var now=instant.toEpochMilli();
var min10 = 10 * 60 * 1000
var day10 = 10 24 * 60 *  60 * 1000
vars.put(&quot;now&quot;,now.toString());
vars.put(&quot;airingStartTime&quot;, (now - day10).toString());
vars.put(&quot;startTime&quot;,       (now).toString());
vars.put(&quot;endTime&quot;,         (now + 1800).toString());
vars.put(&quot;viewDuration&quot;,    3600);
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49588">202</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="39&#x9;when viewDuration &gt; 1.5* contentDuration" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
 {&#xd;
  &quot;deviceType&quot;: &quot;managedCubiTv&quot;,&#xd;
  &quot;product&quot;: &quot;CubiTv&quot;,&#xd;
  &quot;itemId&quot;: &quot;tivo:ct.49457168&quot;,&#xd;
  &quot;queryId&quot;: &quot;5dasf2345701vgfs&quot;,&#xd;
  &quot;utcOffset&quot;: &quot;-0600&quot;,&#xd;
  &quot;country&quot;: &quot;USA&quot;,&#xd;
  &quot;type&quot;: &quot;LINEAR&quot;,&#xd;
  &quot;startTime&quot;: ${startTime},&#xd;
  &quot;endTime&quot;: ${endTime},&#xd;
  &quot;airingStartTime&quot;: ${airingStartTime},&#xd;
  &quot;startOffset&quot;: 1396,&#xd;
  &quot;endOffset&quot;: 3600,&#xd;
  &quot;contentDuration&quot;: ${contentDuration},&#xd;
  &quot;viewDuration&quot;: ${viewDuration},&#xd;
  &quot;stationId&quot;: &quot;tivo:st.370200433&quot;,&#xd;
  &quot;vodProviderId&quot;: &quot;tivo:pt.1234&quot;&#xd;
  }&#xd;
]&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/deviceViewEvents</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import java.time.Instant

Instant instant = Instant.now();
var now=instant.toEpochMilli();
var min10 = 10 * 60 * 1000
var day10 = 10 24 * 60 *  60 * 1000
vars.put(&quot;now&quot;,now.toString());
vars.put(&quot;airingStartTime&quot;, (now - day10).toString());
vars.put(&quot;startTime&quot;,       (now).toString());
vars.put(&quot;endTime&quot;,         (now + 1800).toString());

var contentDuration = 		3600
var viewDuration = 1.7 * contentDuration

vars.put(&quot;contentDuration&quot;,	contentDuration.toString());
vars.put(&quot;viewDuration&quot;,    	viewDuration.toString());
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49588">202</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="40&#x9;(neg)when viewDuration = -1" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
 {&#xd;
  &quot;deviceType&quot;: &quot;managedCubiTv&quot;,&#xd;
  &quot;product&quot;: &quot;CubiTv&quot;,&#xd;
  &quot;itemId&quot;: &quot;tivo:ct.49457168&quot;,&#xd;
  &quot;queryId&quot;: &quot;5dasf2345701vgfs&quot;,&#xd;
  &quot;utcOffset&quot;: &quot;-0600&quot;,&#xd;
  &quot;country&quot;: &quot;USA&quot;,&#xd;
  &quot;type&quot;: &quot;LINEAR&quot;,&#xd;
  &quot;startTime&quot;: ${startTime},&#xd;
  &quot;endTime&quot;: ${endTime},&#xd;
  &quot;airingStartTime&quot;: ${airingStartTime},&#xd;
  &quot;startOffset&quot;: 1396,&#xd;
  &quot;endOffset&quot;: 3600,&#xd;
  &quot;contentDuration&quot;: ${contentDuration},&#xd;
  &quot;viewDuration&quot;: ${viewDuration},&#xd;
  &quot;stationId&quot;: &quot;tivo:st.370200433&quot;,&#xd;
  &quot;vodProviderId&quot;: &quot;tivo:pt.1234&quot;&#xd;
  }&#xd;
]&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/deviceViewEvents</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import java.time.Instant

Instant instant = Instant.now();
var now=instant.toEpochMilli();
var min10 = 10 * 60 * 1000
var day10 = 10 24 * 60 *  60 * 1000
vars.put(&quot;now&quot;,now.toString());
vars.put(&quot;airingStartTime&quot;, (now - day10).toString());
vars.put(&quot;startTime&quot;,       (now).toString());
vars.put(&quot;endTime&quot;,         (now + 1800).toString());

var contentDuration = 3600
var viewDuration 	= -1

vars.put(&quot;contentDuration&quot;,	contentDuration.toString());
vars.put(&quot;viewDuration&quot;,    	viewDuration.toString());
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="51508">400</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="41&#x9;when portionViewed= 0&#x9;" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
 {&#xd;
  &quot;deviceType&quot;: &quot;managedCubiTv&quot;,&#xd;
  &quot;product&quot;: &quot;CubiTv&quot;,&#xd;
  &quot;itemId&quot;: &quot;tivo:ct.49457168&quot;,&#xd;
  &quot;queryId&quot;: &quot;5dasf2345701vgfs&quot;,&#xd;
  &quot;utcOffset&quot;: &quot;-0600&quot;,&#xd;
  &quot;country&quot;: &quot;USA&quot;,&#xd;
  &quot;type&quot;: &quot;LINEAR&quot;,&#xd;
  &quot;startTime&quot;: ${startTime},&#xd;
  &quot;endTime&quot;: ${endTime},&#xd;
  &quot;airingStartTime&quot;: ${airingStartTime},&#xd;
  &quot;startOffset&quot;: 1396,&#xd;
  &quot;endOffset&quot;: 3600,&#xd;
  &quot;contentDuration&quot;: ${contentDuration},&#xd;
  &quot;viewDuration&quot;: ${viewDuration},&#xd;
  &quot;portionViewed&quot;: 0&#xd;
  &quot;stationId&quot;: &quot;tivo:st.370200433&quot;,&#xd;
  &quot;vodProviderId&quot;: &quot;tivo:pt.1234&quot;&#xd;
  }&#xd;
]&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/deviceViewEvents</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import java.time.Instant

Instant instant = Instant.now();
var now=instant.toEpochMilli();
var min10 = 10 * 60 * 1000
var day10 = 10 24 * 60 *  60 * 1000
vars.put(&quot;now&quot;,now.toString());
vars.put(&quot;airingStartTime&quot;, (now - day10).toString());
vars.put(&quot;startTime&quot;,       (now).toString());
vars.put(&quot;endTime&quot;,         (now + 1800).toString());

var contentDuration = 3600
var viewDuration = 1.7 * contentDuration


vars.put(&quot;contentDuration&quot;,	contentDuration.toString());
vars.put(&quot;viewDuration&quot;,    	viewDuration.toString());
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49588">202</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="42. (neg)when stationId = missing and type=LINEAR" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
 {&#xd;
  &quot;deviceType&quot;: &quot;managedCubiTv&quot;,&#xd;
  &quot;product&quot;: &quot;CubiTv&quot;,&#xd;
  &quot;itemId&quot;: &quot;tivo:ct.49457168&quot;,&#xd;
  &quot;queryId&quot;: &quot;5dasf2345701vgfs&quot;,&#xd;
  &quot;utcOffset&quot;: &quot;-0600&quot;,&#xd;
  &quot;country&quot;: &quot;USA&quot;,&#xd;
  &quot;type&quot;: &quot;LINEAR&quot;,&#xd;
  &quot;startTime&quot;: ${startTime},&#xd;
  &quot;endTime&quot;: ${endTime},&#xd;
  &quot;airingStartTime&quot;: ${airingStartTime},&#xd;
  &quot;startOffset&quot;: 1396,&#xd;
  &quot;endOffset&quot;: 3600,&#xd;
  &quot;contentDuration&quot;: ${contentDuration},&#xd;
  &quot;viewDuration&quot;: ${viewDuration},&#xd;
  &quot;portionViewed&quot;: 0&#xd;
  &quot;vodProviderId&quot;: &quot;tivo:pt.1234&quot;&#xd;
  }&#xd;
]&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/deviceViewEvents</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import java.time.Instant

Instant instant = Instant.now();
var now=instant.toEpochMilli();
var min10 = 10 * 60 * 1000
var day10 = 10 24 * 60 *  60 * 1000
vars.put(&quot;now&quot;,now.toString());
vars.put(&quot;airingStartTime&quot;, (now - day10).toString());
vars.put(&quot;startTime&quot;,       (now).toString());
vars.put(&quot;endTime&quot;,         (now + 1800).toString());

var contentDuration = 3600
var viewDuration = 1.7 * contentDuration


vars.put(&quot;contentDuration&quot;,	contentDuration.toString());
vars.put(&quot;viewDuration&quot;,    	viewDuration.toString());
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="51508">400</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="43&#x9;(neg)when stationId= missing and type=DVR_PLAY" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
 {&#xd;
  &quot;deviceType&quot;: &quot;managedCubiTv&quot;,&#xd;
  &quot;product&quot;: &quot;CubiTv&quot;,&#xd;
  &quot;itemId&quot;: &quot;tivo:ct.49457168&quot;,&#xd;
  &quot;queryId&quot;: &quot;5dasf2345701vgfs&quot;,&#xd;
  &quot;utcOffset&quot;: &quot;-0600&quot;,&#xd;
  &quot;country&quot;: &quot;USA&quot;,&#xd;
  &quot;type&quot;: &quot;DVR_PLAY&quot;,&#xd;
  &quot;startTime&quot;: ${startTime},&#xd;
  &quot;endTime&quot;: ${endTime},&#xd;
  &quot;airingStartTime&quot;: ${airingStartTime},&#xd;
  &quot;startOffset&quot;: 1396,&#xd;
  &quot;endOffset&quot;: 3600,&#xd;
  &quot;contentDuration&quot;: ${contentDuration},&#xd;
  &quot;viewDuration&quot;: ${viewDuration},&#xd;
  &quot;portionViewed&quot;: 0&#xd;
  &quot;vodProviderId&quot;: &quot;tivo:pt.1234&quot;&#xd;
  }&#xd;
]&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/deviceViewEvents</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import java.time.Instant

Instant instant = Instant.now();
var now=instant.toEpochMilli();
var min10 = 10 * 60 * 1000
var day10 = 10 24 * 60 *  60 * 1000
vars.put(&quot;now&quot;,now.toString());
vars.put(&quot;airingStartTime&quot;, (now - day10).toString());
vars.put(&quot;startTime&quot;,       (now).toString());
vars.put(&quot;endTime&quot;,         (now + 1800).toString());

var contentDuration = 3600
var viewDuration = 1.7 * contentDuration


vars.put(&quot;contentDuration&quot;,	contentDuration.toString());
vars.put(&quot;viewDuration&quot;,    	viewDuration.toString());
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="51508">400</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="44. (neg)when vodProviderId=missing and type=VOD_Purchase" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
 {&#xd;
  &quot;deviceType&quot;: &quot;managedCubiTv&quot;,&#xd;
  &quot;product&quot;: &quot;CubiTv&quot;,&#xd;
  &quot;itemId&quot;: &quot;tivo:ct.49457168&quot;,&#xd;
  &quot;queryId&quot;: &quot;5dasf2345701vgfs&quot;,&#xd;
  &quot;utcOffset&quot;: &quot;-0600&quot;,&#xd;
  &quot;country&quot;: &quot;USA&quot;,&#xd;
  &quot;type&quot;: &quot;VOD_Purchase&quot;,&#xd;
  &quot;startTime&quot;: ${startTime},&#xd;
  &quot;endTime&quot;: ${endTime},&#xd;
  &quot;airingStartTime&quot;: ${airingStartTime},&#xd;
  &quot;startOffset&quot;: 1396,&#xd;
  &quot;endOffset&quot;: 3600,&#xd;
  &quot;contentDuration&quot;: ${contentDuration},&#xd;
  &quot;viewDuration&quot;: ${viewDuration},&#xd;
  &quot;portionViewed&quot;: 0&#xd;
  &quot;stationId&quot;: &quot;tivo:st.370200433&quot;,&#xd;
  }&#xd;
]&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/deviceViewEvents</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import java.time.Instant

Instant instant = Instant.now();
var now=instant.toEpochMilli();
var min10 = 10 * 60 * 1000
var day10 = 10 24 * 60 *  60 * 1000
vars.put(&quot;now&quot;,now.toString());
vars.put(&quot;airingStartTime&quot;, (now - day10).toString());
vars.put(&quot;startTime&quot;,       (now).toString());
vars.put(&quot;endTime&quot;,         (now + 1800).toString());

var contentDuration = 3600
var viewDuration = 1.7 * contentDuration


vars.put(&quot;contentDuration&quot;,	contentDuration.toString());
vars.put(&quot;viewDuration&quot;,    	viewDuration.toString());
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="51508">400</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="45&#x9;(neg)when vodProviderId=missing and type=VOD_FREE" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
 {&#xd;
  &quot;deviceType&quot;: &quot;managedCubiTv&quot;,&#xd;
  &quot;product&quot;: &quot;CubiTv&quot;,&#xd;
  &quot;itemId&quot;: &quot;tivo:ct.49457168&quot;,&#xd;
  &quot;queryId&quot;: &quot;5dasf2345701vgfs&quot;,&#xd;
  &quot;utcOffset&quot;: &quot;-0600&quot;,&#xd;
  &quot;country&quot;: &quot;USA&quot;,&#xd;
  &quot;type&quot;: &quot;LIN&quot;,&#xd;
  &quot;startTime&quot;: ${startTime},&#xd;
  &quot;endTime&quot;: ${endTime},&#xd;
  &quot;airingStartTime&quot;: ${airingStartTime},&#xd;
  &quot;startOffset&quot;: 1396,&#xd;
  &quot;endOffset&quot;: 3600,&#xd;
  &quot;contentDuration&quot;: ${contentDuration},&#xd;
  &quot;viewDuration&quot;: ${viewDuration},&#xd;
  &quot;portionViewed&quot;: 0&#xd;
  &quot;stationId&quot;: &quot;tivo:st.370200433&quot;,&#xd;
  }&#xd;
]&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/deviceViewEvents</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import java.time.Instant

Instant instant = Instant.now();
var now=instant.toEpochMilli();
var min10 = 10 * 60 * 1000
var day10 = 10 24 * 60 *  60 * 1000
vars.put(&quot;now&quot;,now.toString());
vars.put(&quot;airingStartTime&quot;, (now - day10).toString());
vars.put(&quot;startTime&quot;,       (now).toString());
vars.put(&quot;endTime&quot;,         (now + 1800).toString());

var contentDuration = 3600
var viewDuration = 1.7 * contentDuration


vars.put(&quot;contentDuration&quot;,	contentDuration.toString());
vars.put(&quot;viewDuration&quot;,    	viewDuration.toString());
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="51508">400</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="46&#x9;when utcOffset = +0000" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
 {&#xd;
  &quot;deviceType&quot;: &quot;managedCubiTv&quot;,&#xd;
  &quot;product&quot;: &quot;CubiTv&quot;,&#xd;
  &quot;itemId&quot;: &quot;tivo:ct.49457168&quot;,&#xd;
  &quot;queryId&quot;: &quot;5dasf2345701vgfs&quot;,&#xd;
  &quot;utcOffset&quot;: &quot;+0000&quot;,&#xd;
  &quot;country&quot;: &quot;USA&quot;,&#xd;
  &quot;type&quot;: &quot;LINEAR&quot;,&#xd;
  &quot;startTime&quot;: 1591898400000,&#xd;
  &quot;endTime&quot;: 1591900200000,&#xd;
  &quot;airingStartTime&quot;: 1591898400000,&#xd;
  &quot;startOffset&quot;: 1396,&#xd;
  &quot;endOffset&quot;: 1800,&#xd;
  &quot;contentDuration&quot;: 1800,&#xd;
  &quot;viewDuration&quot;: 399,&#xd;
  &quot;stationId&quot;: &quot;tivo:st.370200433&quot;,&#xd;
  &quot;vodProviderId&quot;: &quot;tivo:pt.1234&quot;&#xd;
  }&#xd;
]&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/deviceViewEvents</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import java.time.Instant

Instant instant = Instant.now();
var now=instant.toEpochMilli();
var min10 = 10 * 60 * 1000
var day10 = 10 24 * 60 *  60 * 1000
vars.put(&quot;now&quot;,now.toString());
vars.put(&quot;airingStartTime&quot;, (now - day10).toString());
vars.put(&quot;startTime&quot;,       (now).toString());
vars.put(&quot;endTime&quot;,         (now + 1800).toString());

var contentDuration = 3600
var viewDuration = 1.7 * contentDuration


vars.put(&quot;contentDuration&quot;,	contentDuration.toString());
vars.put(&quot;viewDuration&quot;,    	viewDuration.toString());
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49588">202</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="47&#x9;when utcOffset=+0500" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
 {&#xd;
  &quot;deviceType&quot;: &quot;managedCubiTv&quot;,&#xd;
  &quot;product&quot;: &quot;CubiTv&quot;,&#xd;
  &quot;itemId&quot;: &quot;tivo:ct.49457168&quot;,&#xd;
  &quot;queryId&quot;: &quot;5dasf2345701vgfs&quot;,&#xd;
  &quot;utcOffset&quot;: &quot;+0500&quot;,&#xd;
  &quot;country&quot;: &quot;USA&quot;,&#xd;
  &quot;type&quot;: &quot;LINEAR&quot;,&#xd;
  &quot;startTime&quot;: 1591898400000,&#xd;
  &quot;endTime&quot;: 1591900200000,&#xd;
  &quot;airingStartTime&quot;: 1591898400000,&#xd;
  &quot;startOffset&quot;: 1396,&#xd;
  &quot;endOffset&quot;: 1800,&#xd;
  &quot;contentDuration&quot;: 1800,&#xd;
  &quot;viewDuration&quot;: 399,&#xd;
  &quot;stationId&quot;: &quot;tivo:st.370200433&quot;,&#xd;
  &quot;vodProviderId&quot;: &quot;tivo:pt.1234&quot;&#xd;
  }&#xd;
]&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/deviceViewEvents</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import java.time.Instant

Instant instant = Instant.now();
var now=instant.toEpochMilli();
var min10 = 10 * 60 * 1000
var day10 = 10 24 * 60 *  60 * 1000
vars.put(&quot;now&quot;,now.toString());
vars.put(&quot;airingStartTime&quot;, (now - day10).toString());
vars.put(&quot;startTime&quot;,       (now).toString());
vars.put(&quot;endTime&quot;,         (now + 1800).toString());

var contentDuration = 3600
var viewDuration = 1.7 * contentDuration


vars.put(&quot;contentDuration&quot;,	contentDuration.toString());
vars.put(&quot;viewDuration&quot;,    	viewDuration.toString());
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49588">202</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="48&#x9;when utcOffset=-0500" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
 {&#xd;
  &quot;deviceType&quot;: &quot;managedCubiTv&quot;,&#xd;
  &quot;product&quot;: &quot;CubiTv&quot;,&#xd;
  &quot;itemId&quot;: &quot;tivo:ct.49457168&quot;,&#xd;
  &quot;queryId&quot;: &quot;5dasf2345701vgfs&quot;,&#xd;
  &quot;utcOffset&quot;: &quot;-0500&quot;,&#xd;
  &quot;country&quot;: &quot;USA&quot;,&#xd;
  &quot;type&quot;: &quot;LINEAR&quot;,&#xd;
  &quot;startTime&quot;: 1591898400000,&#xd;
  &quot;endTime&quot;: 1591900200000,&#xd;
  &quot;airingStartTime&quot;: 1591898400000,&#xd;
  &quot;startOffset&quot;: 1396,&#xd;
  &quot;endOffset&quot;: 1800,&#xd;
  &quot;contentDuration&quot;: 1800,&#xd;
  &quot;viewDuration&quot;: 399,&#xd;
  &quot;stationId&quot;: &quot;tivo:st.370200433&quot;,&#xd;
  &quot;vodProviderId&quot;: &quot;tivo:pt.1234&quot;&#xd;
  }&#xd;
]&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/deviceViewEvents</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import java.time.Instant

Instant instant = Instant.now();
var now=instant.toEpochMilli();
var min10 = 10 * 60 * 1000
var day10 = 10 24 * 60 *  60 * 1000
vars.put(&quot;now&quot;,now.toString());
vars.put(&quot;airingStartTime&quot;, (now - day10).toString());
vars.put(&quot;startTime&quot;,       (now).toString());
vars.put(&quot;endTime&quot;,         (now + 1800).toString());

var contentDuration = 3600
var viewDuration = 1.7 * contentDuration


vars.put(&quot;contentDuration&quot;,	contentDuration.toString());
vars.put(&quot;viewDuration&quot;,    	viewDuration.toString());
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49588">202</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="49&#x9;(neg)when utcOffset=+2400" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
 {&#xd;
  &quot;deviceType&quot;: &quot;managedCubiTv&quot;,&#xd;
  &quot;product&quot;: &quot;CubiTv&quot;,&#xd;
  &quot;itemId&quot;: &quot;tivo:ct.49457168&quot;,&#xd;
  &quot;queryId&quot;: &quot;5dasf2345701vgfs&quot;,&#xd;
  &quot;utcOffset&quot;: &quot;-2400&quot;,&#xd;
  &quot;country&quot;: &quot;USA&quot;,&#xd;
  &quot;type&quot;: &quot;LINEAR&quot;,&#xd;
  &quot;startTime&quot;: 1591898400000,&#xd;
  &quot;endTime&quot;: 1591900200000,&#xd;
  &quot;airingStartTime&quot;: 1591898400000,&#xd;
  &quot;startOffset&quot;: 1396,&#xd;
  &quot;endOffset&quot;: 1800,&#xd;
  &quot;contentDuration&quot;: 1800,&#xd;
  &quot;viewDuration&quot;: 399,&#xd;
  &quot;stationId&quot;: &quot;tivo:st.370200433&quot;,&#xd;
  &quot;vodProviderId&quot;: &quot;tivo:pt.1234&quot;&#xd;
  }&#xd;
]&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/deviceViewEvents</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import java.time.Instant

Instant instant = Instant.now();
var now=instant.toEpochMilli();
var min10 = 10 * 60 * 1000
var day10 = 10 24 * 60 *  60 * 1000
vars.put(&quot;now&quot;,now.toString());
vars.put(&quot;airingStartTime&quot;, (now - day10).toString());
vars.put(&quot;startTime&quot;,       (now).toString());
vars.put(&quot;endTime&quot;,         (now + 1800).toString());

var contentDuration = 3600
var viewDuration = 1.7 * contentDuration


vars.put(&quot;contentDuration&quot;,	contentDuration.toString());
vars.put(&quot;viewDuration&quot;,    	viewDuration.toString());
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="51508">400</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="50&#x9;When postalCode=INVALID" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
 {&#xd;
  &quot;deviceType&quot;: &quot;managedCubiTv&quot;,&#xd;
  &quot;product&quot;: &quot;CubiTv&quot;,&#xd;
  &quot;itemId&quot;: &quot;tivo:ct.49457168&quot;,&#xd;
  &quot;queryId&quot;: &quot;5dasf2345701vgfs&quot;,&#xd;
  &quot;utcOffset&quot;: &quot;-2400&quot;,&#xd;
  &quot;country&quot;: &quot;USA&quot;,&#xd;
  &quot;postalCode&quot;: &quot;INVALID&quot;,&#xd;
  &quot;type&quot;: &quot;LINEAR&quot;,&#xd;
  &quot;startTime&quot;: 1591898400000,&#xd;
  &quot;endTime&quot;: 1591900200000,&#xd;
  &quot;airingStartTime&quot;: 1591898400000,&#xd;
  &quot;startOffset&quot;: 1396,&#xd;
  &quot;endOffset&quot;: 1800,&#xd;
  &quot;contentDuration&quot;: 1800,&#xd;
  &quot;viewDuration&quot;: 399,&#xd;
  &quot;stationId&quot;: &quot;tivo:st.370200433&quot;,&#xd;
  &quot;vodProviderId&quot;: &quot;tivo:pt.1234&quot;&#xd;
  }&#xd;
]&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/deviceViewEvents</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import java.time.Instant

Instant instant = Instant.now();
var now=instant.toEpochMilli();
var min10 = 10 * 60 * 1000
var day10 = 10 24 * 60 *  60 * 1000
vars.put(&quot;now&quot;,now.toString());
vars.put(&quot;airingStartTime&quot;, (now - day10).toString());
vars.put(&quot;startTime&quot;,       (now).toString());
vars.put(&quot;endTime&quot;,         (now + 1800).toString());

var contentDuration = 3600
var viewDuration = 1.7 * contentDuration


vars.put(&quot;contentDuration&quot;,	contentDuration.toString());
vars.put(&quot;viewDuration&quot;,    	viewDuration.toString());
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="51508">400</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="51&#x9;when segment=INVALID" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
 {&#xd;
  &quot;deviceType&quot;: &quot;managedCubiTv&quot;,&#xd;
  &quot;product&quot;: &quot;CubiTv&quot;,&#xd;
  &quot;itemId&quot;: &quot;tivo:ct.49457168&quot;,&#xd;
  &quot;queryId&quot;: &quot;5dasf2345701vgfs&quot;,&#xd;
  &quot;utcOffset&quot;: &quot;-2400&quot;,&#xd;
  &quot;country&quot;: &quot;USA&quot;,&#xd;
  &quot;segment&quot;: &quot;INVALID&quot;,  &#xd;
  &quot;type&quot;: &quot;LINEAR&quot;,&#xd;
  &quot;startTime&quot;: 1591898400000,&#xd;
  &quot;endTime&quot;: 1591900200000,&#xd;
  &quot;airingStartTime&quot;: 1591898400000,&#xd;
  &quot;startOffset&quot;: 1396,&#xd;
  &quot;endOffset&quot;: 1800,&#xd;
  &quot;contentDuration&quot;: 1800,&#xd;
  &quot;viewDuration&quot;: 399,&#xd;
  &quot;stationId&quot;: &quot;tivo:st.370200433&quot;,&#xd;
  &quot;vodProviderId&quot;: &quot;tivo:pt.1234&quot;&#xd;
  }&#xd;
]&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/deviceViewEvents</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import java.time.Instant

Instant instant = Instant.now();
var now=instant.toEpochMilli();
var min10 = 10 * 60 * 1000
var day10 = 10 24 * 60 *  60 * 1000
vars.put(&quot;now&quot;,now.toString());
vars.put(&quot;airingStartTime&quot;, (now - day10).toString());
vars.put(&quot;startTime&quot;,       (now).toString());
vars.put(&quot;endTime&quot;,         (now + 1800).toString());

var contentDuration = 3600
var viewDuration = 1.7 * contentDuration


vars.put(&quot;contentDuration&quot;,	contentDuration.toString());
vars.put(&quot;viewDuration&quot;,    	viewDuration.toString());
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="51508">400</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="52&#x9;Array of events with different ItemId " enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
 {&#xd;
  &quot;deviceType&quot;: &quot;managedCubiTv&quot;,&#xd;
  &quot;product&quot;: &quot;CubiTv&quot;,&#xd;
  &quot;itemId&quot;: &quot;tivo:ct.49457168&quot;,&#xd;
  &quot;queryId&quot;: &quot;queryid1&quot;,&#xd;
  &quot;utcOffset&quot;: &quot;-2400&quot;,&#xd;
  &quot;country&quot;: &quot;USA&quot;,&#xd;
  &quot;segment&quot;: &quot;INVALID&quot;,  &#xd;
  &quot;type&quot;: &quot;LINEAR&quot;,&#xd;
  &quot;startTime&quot;: 1591898400000,&#xd;
  &quot;endTime&quot;: 1591900200000,&#xd;
  &quot;airingStartTime&quot;: 1591898400000,&#xd;
  &quot;startOffset&quot;: 1396,&#xd;
  &quot;endOffset&quot;: 1800,&#xd;
  &quot;contentDuration&quot;: 1800,&#xd;
  &quot;viewDuration&quot;: 399,&#xd;
  &quot;stationId&quot;: &quot;tivo:st.370200433&quot;,&#xd;
  &quot;vodProviderId&quot;: &quot;tivo:pt.1234&quot;&#xd;
  },&#xd;
 {&#xd;
  &quot;deviceType&quot;: &quot;managedCubiTv&quot;,&#xd;
  &quot;product&quot;: &quot;CubiTv&quot;,&#xd;
  &quot;itemId&quot;: &quot;tivo:ct.49457168&quot;,&#xd;
  &quot;queryId&quot;: &quot;queryid2&quot;,&#xd;
  &quot;utcOffset&quot;: &quot;-2400&quot;,&#xd;
  &quot;country&quot;: &quot;USA&quot;,&#xd;
  &quot;segment&quot;: &quot;INVALID&quot;,  &#xd;
  &quot;type&quot;: &quot;LINEAR&quot;,&#xd;
  &quot;startTime&quot;: 1591898400000,&#xd;
  &quot;endTime&quot;: 1591900200000,&#xd;
  &quot;airingStartTime&quot;: 1591898400000,&#xd;
  &quot;startOffset&quot;: 1396,&#xd;
  &quot;endOffset&quot;: 1800,&#xd;
  &quot;contentDuration&quot;: 1800,&#xd;
  &quot;viewDuration&quot;: 399,&#xd;
  &quot;stationId&quot;: &quot;tivo:st.370200433&quot;,&#xd;
  &quot;vodProviderId&quot;: &quot;tivo:pt.1234&quot;&#xd;
  }&#xd;
  &#xd;
]&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/deviceViewEvents</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import java.time.Instant

Instant instant = Instant.now();
var now=instant.toEpochMilli();
var min10 = 10 * 60 * 1000
var day10 = 10 24 * 60 *  60 * 1000
vars.put(&quot;now&quot;,now.toString());
vars.put(&quot;airingStartTime&quot;, (now - day10).toString());
vars.put(&quot;startTime&quot;,       (now).toString());
vars.put(&quot;endTime&quot;,         (now + 1800).toString());

var contentDuration = 3600
var viewDuration = 1.7 * contentDuration


vars.put(&quot;contentDuration&quot;,	contentDuration.toString());
vars.put(&quot;viewDuration&quot;,    	viewDuration.toString());
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49588">202</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="implicitEvents" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1. POST /v1/implicitEvents" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
  {&#xd;
  &quot;deviceType&quot;: &quot;managedCubiTv&quot;,&#xd;
  &quot;product&quot;: &quot;CubiTv&quot;,&#xd;
  &quot;itemId&quot;: &quot;tivo:ct.49457168&quot;,&#xd;
  &quot;queryId&quot;: &quot;5dasf2345701vgfs&quot;,&#xd;
  &quot;utcOffset&quot;: &quot;-0600&quot;,&#xd;
  &quot;country&quot;: &quot;USA&quot;,&#xd;
  &quot;type&quot;: &quot;WTW_VIEW_DETAILS&quot;,&#xd;
  &quot;timestamp&quot;: 1591906757000&#xd;
  }&#xd;
]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/implicitEvents</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Code = 202      " enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49588">202</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="2. (neg) with missing deviceType" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
  {&#xd;
  &quot;product&quot;: &quot;CubiTv&quot;,&#xd;
  &quot;itemId&quot;: &quot;tivo:ct.49457168&quot;,&#xd;
  &quot;queryId&quot;: &quot;5dasf2345701vgfs&quot;,&#xd;
  &quot;utcOffset&quot;: &quot;-0600&quot;,&#xd;
  &quot;country&quot;: &quot;USA&quot;,&#xd;
  &quot;type&quot;: &quot;WTW_VIEW_DETAILS&quot;,&#xd;
  &quot;timestamp&quot;: 1591906757000&#xd;
  }&#xd;
]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/implicitEvents</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="51508">400</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.(neg) with deviceType=INVALID &#x9;" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
  {&#xd;
  &quot;deviceType&quot;: &quot;INVALID&quot;,&#xd;
  &quot;product&quot;: &quot;CubiTv&quot;,&#xd;
  &quot;itemId&quot;: &quot;tivo:ct.49457168&quot;,&#xd;
  &quot;queryId&quot;: &quot;5dasf2345701vgfs&quot;,&#xd;
  &quot;utcOffset&quot;: &quot;-0600&quot;,&#xd;
  &quot;country&quot;: &quot;USA&quot;,&#xd;
  &quot;type&quot;: &quot;WTW_VIEW_DETAILS&quot;,&#xd;
  &quot;timestamp&quot;: 1591906757000&#xd;
  }&#xd;
]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/implicitEvents</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="51508">400</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.scope">all</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="4. (neg) with missing product" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
  {&#xd;
  &quot;deviceType&quot;: &quot;managedCubiTv&quot;,&#xd;
  &quot;itemId&quot;: &quot;tivo:ct.49457168&quot;,&#xd;
  &quot;queryId&quot;: &quot;5dasf2345701vgfs&quot;,&#xd;
  &quot;utcOffset&quot;: &quot;-0600&quot;,&#xd;
  &quot;country&quot;: &quot;USA&quot;,&#xd;
  &quot;type&quot;: &quot;WTW_VIEW_DETAILS&quot;,&#xd;
  &quot;timestamp&quot;: 1591906757000&#xd;
  }&#xd;
]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/implicitEvents</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="51508">400</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="5. (neg) with product=INVALID " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
  {&#xd;
  &quot;deviceType&quot;: &quot;managedCubiTv&quot;,&#xd;
  &quot;product&quot;: &quot;INVALID&quot;,&#xd;
  &quot;itemId&quot;: &quot;tivo:ct.49457168&quot;,&#xd;
  &quot;queryId&quot;: &quot;5dasf2345701vgfs&quot;,&#xd;
  &quot;utcOffset&quot;: &quot;-0600&quot;,&#xd;
  &quot;country&quot;: &quot;USA&quot;,&#xd;
  &quot;type&quot;: &quot;WTW_VIEW_DETAILS&quot;,&#xd;
  &quot;timestamp&quot;: 1591906757000&#xd;
  }&#xd;
]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/implicitEvents</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="51508">400</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="6. (neg) with missing itemId" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
  {&#xd;
  &quot;deviceType&quot;: &quot;managedCubiTv&quot;,&#xd;
  &quot;product&quot;: &quot;CubiTv&quot;,&#xd;
  &quot;queryId&quot;: &quot;5dasf2345701vgfs&quot;,&#xd;
  &quot;utcOffset&quot;: &quot;-0600&quot;,&#xd;
  &quot;country&quot;: &quot;USA&quot;,&#xd;
  &quot;type&quot;: &quot;WTW_VIEW_DETAILS&quot;,&#xd;
  &quot;timestamp&quot;: 1591906757000&#xd;
  }&#xd;
]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/implicitEvents</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="51508">400</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="7. (neg) with itemId=INVALID " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
  {&#xd;
  &quot;deviceType&quot;: &quot;managedCubiTv&quot;,&#xd;
  &quot;product&quot;: &quot;CubiTv&quot;,&#xd;
  &quot;itemId&quot;: &quot;INVALID&quot;,&#xd;
  &quot;queryId&quot;: &quot;5dasf2345701vgfs&quot;,&#xd;
  &quot;utcOffset&quot;: &quot;-0600&quot;,&#xd;
  &quot;country&quot;: &quot;USA&quot;,&#xd;
  &quot;type&quot;: &quot;WTW_VIEW_DETAILS&quot;,&#xd;
  &quot;timestamp&quot;: 1591906757000&#xd;
  }&#xd;
]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/implicitEvents</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="51508">400</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="8. (neg) queryId=INVALID " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
  {&#xd;
  &quot;deviceType&quot;: &quot;managedCubiTv&quot;,&#xd;
  &quot;product&quot;: &quot;CubiTv&quot;,&#xd;
  &quot;itemId&quot;: &quot;tivo:ct.49457168&quot;,&#xd;
  &quot;queryId&quot;: &quot;INVALID&quot;,&#xd;
  &quot;utcOffset&quot;: &quot;-0600&quot;,&#xd;
  &quot;country&quot;: &quot;USA&quot;,&#xd;
  &quot;type&quot;: &quot;WTW_VIEW_DETAILS&quot;,&#xd;
  &quot;timestamp&quot;: 1591906757000&#xd;
  }&#xd;
]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/implicitEvents</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="51508">400</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="9,&#x9;when utcOffset = +0000" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
  {&#xd;
  &quot;deviceType&quot;: &quot;managedCubiTv&quot;,&#xd;
  &quot;product&quot;: &quot;CubiTv&quot;,&#xd;
  &quot;itemId&quot;: &quot;tivo:ct.49457168&quot;,&#xd;
  &quot;queryId&quot;: &quot;5dasf2345701vgfs&quot;,&#xd;
  &quot;utcOffset&quot;: &quot;-0000&quot;,&#xd;
  &quot;country&quot;: &quot;USA&quot;,&#xd;
  &quot;type&quot;: &quot;WTW_VIEW_DETAILS&quot;,&#xd;
  &quot;timestamp&quot;: 1591906757000&#xd;
  }&#xd;
]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/deviceViewEvents</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import java.time.Instant

Instant instant = Instant.now();
var now=instant.toEpochMilli();
var min10 = 10 * 60 * 1000
var day10 = 10 24 * 60 *  60 * 1000
vars.put(&quot;now&quot;,now.toString());
vars.put(&quot;airingStartTime&quot;, (now - day10).toString());
vars.put(&quot;startTime&quot;,       (now).toString());
vars.put(&quot;endTime&quot;,         (now + 1800).toString());

var contentDuration = 3600
var viewDuration = 1.7 * contentDuration


vars.put(&quot;contentDuration&quot;,	contentDuration.toString());
vars.put(&quot;viewDuration&quot;,    	viewDuration.toString());
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49588">202</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="10.&#x9;when utcOffset=+0500" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
  {&#xd;
  &quot;deviceType&quot;: &quot;managedCubiTv&quot;,&#xd;
  &quot;product&quot;: &quot;CubiTv&quot;,&#xd;
  &quot;itemId&quot;: &quot;tivo:ct.49457168&quot;,&#xd;
  &quot;queryId&quot;: &quot;5dasf2345701vgfs&quot;,&#xd;
  &quot;utcOffset&quot;: &quot;-0500&quot;,&#xd;
  &quot;country&quot;: &quot;USA&quot;,&#xd;
  &quot;type&quot;: &quot;WTW_VIEW_DETAILS&quot;,&#xd;
  &quot;timestamp&quot;: 1591906757000&#xd;
  }&#xd;
]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/deviceViewEvents</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import java.time.Instant

Instant instant = Instant.now();
var now=instant.toEpochMilli();
var min10 = 10 * 60 * 1000
var day10 = 10 24 * 60 *  60 * 1000
vars.put(&quot;now&quot;,now.toString());
vars.put(&quot;airingStartTime&quot;, (now - day10).toString());
vars.put(&quot;startTime&quot;,       (now).toString());
vars.put(&quot;endTime&quot;,         (now + 1800).toString());

var contentDuration = 3600
var viewDuration = 1.7 * contentDuration


vars.put(&quot;contentDuration&quot;,	contentDuration.toString());
vars.put(&quot;viewDuration&quot;,    	viewDuration.toString());
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49588">202</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="11.&#x9;when utcOffset=-0500" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
  {&#xd;
  &quot;deviceType&quot;: &quot;managedCubiTv&quot;,&#xd;
  &quot;product&quot;: &quot;CubiTv&quot;,&#xd;
  &quot;itemId&quot;: &quot;tivo:ct.49457168&quot;,&#xd;
  &quot;queryId&quot;: &quot;5dasf2345701vgfs&quot;,&#xd;
  &quot;utcOffset&quot;: &quot;-0500&quot;,&#xd;
  &quot;country&quot;: &quot;USA&quot;,&#xd;
  &quot;type&quot;: &quot;WTW_VIEW_DETAILS&quot;,&#xd;
  &quot;timestamp&quot;: 1591906757000&#xd;
  }&#xd;
]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/deviceViewEvents</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import java.time.Instant

Instant instant = Instant.now();
var now=instant.toEpochMilli();
var min10 = 10 * 60 * 1000
var day10 = 10 24 * 60 *  60 * 1000
vars.put(&quot;now&quot;,now.toString());
vars.put(&quot;airingStartTime&quot;, (now - day10).toString());
vars.put(&quot;startTime&quot;,       (now).toString());
vars.put(&quot;endTime&quot;,         (now + 1800).toString());

var contentDuration = 3600
var viewDuration = 1.7 * contentDuration


vars.put(&quot;contentDuration&quot;,	contentDuration.toString());
vars.put(&quot;viewDuration&quot;,    	viewDuration.toString());
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49588">202</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="12.&#x9;(neg)when utcOffset=+2400" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
  {&#xd;
  &quot;deviceType&quot;: &quot;managedCubiTv&quot;,&#xd;
  &quot;product&quot;: &quot;CubiTv&quot;,&#xd;
  &quot;itemId&quot;: &quot;tivo:ct.49457168&quot;,&#xd;
  &quot;queryId&quot;: &quot;5dasf2345701vgfs&quot;,&#xd;
  &quot;utcOffset&quot;: &quot;+2400&quot;,&#xd;
  &quot;country&quot;: &quot;USA&quot;,&#xd;
  &quot;type&quot;: &quot;WTW_VIEW_DETAILS&quot;,&#xd;
  &quot;timestamp&quot;: 1591906757000&#xd;
  }&#xd;
]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/deviceViewEvents</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import java.time.Instant

Instant instant = Instant.now();
var now=instant.toEpochMilli();
var min10 = 10 * 60 * 1000
var day10 = 10 24 * 60 *  60 * 1000
vars.put(&quot;now&quot;,now.toString());
vars.put(&quot;airingStartTime&quot;, (now - day10).toString());
vars.put(&quot;startTime&quot;,       (now).toString());
vars.put(&quot;endTime&quot;,         (now + 1800).toString());

var contentDuration = 3600
var viewDuration = 1.7 * contentDuration


vars.put(&quot;contentDuration&quot;,	contentDuration.toString());
vars.put(&quot;viewDuration&quot;,    	viewDuration.toString());
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="51508">400</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="13. with country=ISO 3166-1 alpha-3(PAN)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
  {&#xd;
  &quot;deviceType&quot;: &quot;managedCubiTv&quot;,&#xd;
  &quot;product&quot;: &quot;CubiTv&quot;,&#xd;
  &quot;itemId&quot;: &quot;tivo:ct.49457168&quot;,&#xd;
  &quot;queryId&quot;: &quot;5dasf2345701vgfs&quot;,&#xd;
  &quot;utcOffset&quot;: &quot;-0600&quot;,&#xd;
  &quot;country&quot;: &quot;PAN&quot;,&#xd;
  &quot;type&quot;: &quot;WTW_VIEW_DETAILS&quot;,&#xd;
  &quot;timestamp&quot;: 1591906757000&#xd;
  }&#xd;
]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/deviceViewEvents</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49588">202</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="14. (neg) with country=ISO 3166-1 alpha-2(PN)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
  {&#xd;
  &quot;deviceType&quot;: &quot;managedCubiTv&quot;,&#xd;
  &quot;product&quot;: &quot;CubiTv&quot;,&#xd;
  &quot;itemId&quot;: &quot;tivo:ct.49457168&quot;,&#xd;
  &quot;queryId&quot;: &quot;5dasf2345701vgfs&quot;,&#xd;
  &quot;utcOffset&quot;: &quot;-0600&quot;,&#xd;
  &quot;country&quot;: &quot;PN&quot;,&#xd;
  &quot;type&quot;: &quot;WTW_VIEW_DETAILS&quot;,&#xd;
  &quot;timestamp&quot;: 1591906757000&#xd;
  }&#xd;
]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/deviceViewEvents</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion    " enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="51508">400</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="15&#x9;when Postalcode = 00000 or String A7FT0" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
  {&#xd;
  &quot;deviceType&quot;: &quot;managedCubiTv&quot;,&#xd;
  &quot;product&quot;: &quot;CubiTv&quot;,&#xd;
  &quot;itemId&quot;: &quot;tivo:ct.49457168&quot;,&#xd;
  &quot;queryId&quot;: &quot;5dasf2345701vgfs&quot;,&#xd;
  &quot;utcOffset&quot;: &quot;-0600&quot;,&#xd;
  &quot;country&quot;: &quot;PAN&quot;,&#xd;
  &quot;postalCode&quot;: &quot;FFFFF&quot;&#xd;
  &quot;type&quot;: &quot;WTW_VIEW_DETAILS&quot;,&#xd;
  &quot;timestamp&quot;: 1591906757000&#xd;
  }&#xd;
]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/deviceViewEvents</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion    " enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49588">202</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="16&#x9;when segment=&quot;test&quot;" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
  {&#xd;
  &quot;deviceType&quot;: &quot;managedCubiTv&quot;,&#xd;
  &quot;product&quot;: &quot;CubiTv&quot;,&#xd;
  &quot;itemId&quot;: &quot;tivo:ct.49457168&quot;,&#xd;
  &quot;queryId&quot;: &quot;5dasf2345701vgfs&quot;,&#xd;
  &quot;utcOffset&quot;: &quot;-0600&quot;,&#xd;
  &quot;country&quot;: &quot;PAN&quot;,&#xd;
  &quot;segment&quot;: &quot;FFFFF&quot;&#xd;
  &quot;type&quot;: &quot;WTW_VIEW_DETAILS&quot;,&#xd;
  &quot;timestamp&quot;: 1591906757000&#xd;
  }&#xd;
]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/deviceViewEvents</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion    " enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49588">202</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="17&#x9;when type=PURCHASE" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
  {&#xd;
  &quot;deviceType&quot;: &quot;managedCubiTv&quot;,&#xd;
  &quot;product&quot;: &quot;CubiTv&quot;,&#xd;
  &quot;itemId&quot;: &quot;tivo:ct.49457168&quot;,&#xd;
  &quot;queryId&quot;: &quot;5dasf2345701vgfs&quot;,&#xd;
  &quot;utcOffset&quot;: &quot;-0600&quot;,&#xd;
  &quot;country&quot;: &quot;USA&quot;,&#xd;
  &quot;type&quot;: &quot;WTW_VIEW_DETAILS&quot;,&#xd;
  &quot;timestamp&quot;: 1591906757000&#xd;
  }&#xd;
]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/implicitEvents</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Code = 202      " enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49588">202</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="18&#x9;when type=WTW_VIEW_DETAILS" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
  {&#xd;
  &quot;deviceType&quot;: &quot;managedCubiTv&quot;,&#xd;
  &quot;product&quot;: &quot;CubiTv&quot;,&#xd;
  &quot;itemId&quot;: &quot;tivo:ct.49457168&quot;,&#xd;
  &quot;queryId&quot;: &quot;5dasf2345701vgfs&quot;,&#xd;
  &quot;utcOffset&quot;: &quot;-0600&quot;,&#xd;
  &quot;country&quot;: &quot;USA&quot;,&#xd;
  &quot;type&quot;: &quot;WTW_VIEW_DETAILS&quot;,&#xd;
  &quot;timestamp&quot;: 1591906757000&#xd;
  }&#xd;
]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/implicitEvents</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Code = 202      " enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49588">202</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="19&#x9;when type=SEARCH_VIEW_DETAILS" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
  {&#xd;
  &quot;deviceType&quot;: &quot;managedCubiTv&quot;,&#xd;
  &quot;product&quot;: &quot;CubiTv&quot;,&#xd;
  &quot;itemId&quot;: &quot;tivo:ct.49457168&quot;,&#xd;
  &quot;queryId&quot;: &quot;5dasf2345701vgfs&quot;,&#xd;
  &quot;utcOffset&quot;: &quot;-0600&quot;,&#xd;
  &quot;country&quot;: &quot;USA&quot;,&#xd;
  &quot;type&quot;: &quot;SEARCH_VIEW_DETAILS&quot;,&#xd;
  &quot;timestamp&quot;: 1591906757000&#xd;
  }&#xd;
]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/implicitEvents</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Code = 202      " enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49588">202</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="20&#x9;when type=SEARCH_CAROUSEL_VIEW_DETAILS" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
  {&#xd;
  &quot;deviceType&quot;: &quot;managedCubiTv&quot;,&#xd;
  &quot;product&quot;: &quot;CubiTv&quot;,&#xd;
  &quot;itemId&quot;: &quot;tivo:ct.49457168&quot;,&#xd;
  &quot;queryId&quot;: &quot;5dasf2345701vgfs&quot;,&#xd;
  &quot;utcOffset&quot;: &quot;-0600&quot;,&#xd;
  &quot;country&quot;: &quot;USA&quot;,&#xd;
  &quot;type&quot;: &quot;SEARCH_CAROUSEL_VIEW_DETAILS&quot;,&#xd;
  &quot;timestamp&quot;: 1591906757000&#xd;
  }&#xd;
]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/implicitEvents</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Code = 202      " enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49588">202</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="21&#x9;when type=MLT_VIEW_DETAILS" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
  {&#xd;
  &quot;deviceType&quot;: &quot;managedCubiTv&quot;,&#xd;
  &quot;product&quot;: &quot;CubiTv&quot;,&#xd;
  &quot;itemId&quot;: &quot;tivo:ct.49457168&quot;,&#xd;
  &quot;queryId&quot;: &quot;5dasf2345701vgfs&quot;,&#xd;
  &quot;utcOffset&quot;: &quot;-0600&quot;,&#xd;
  &quot;country&quot;: &quot;USA&quot;,&#xd;
  &quot;type&quot;: &quot;MLT_VIEW_DETAILS&quot;,&#xd;
  &quot;timestamp&quot;: 1591906757000&#xd;
  }&#xd;
]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/implicitEvents</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Code = 202      " enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49588">202</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="22&#x9;when type=SCHEDULE_RECORDING_CREATE" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
  {&#xd;
  &quot;deviceType&quot;: &quot;managedCubiTv&quot;,&#xd;
  &quot;product&quot;: &quot;CubiTv&quot;,&#xd;
  &quot;itemId&quot;: &quot;tivo:ct.49457168&quot;,&#xd;
  &quot;queryId&quot;: &quot;5dasf2345701vgfs&quot;,&#xd;
  &quot;utcOffset&quot;: &quot;-0600&quot;,&#xd;
  &quot;country&quot;: &quot;USA&quot;,&#xd;
  &quot;type&quot;: &quot;SCHEDULE_RECORDING_CREATE&quot;,&#xd;
  &quot;timestamp&quot;: 1591906757000&#xd;
  }&#xd;
]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/implicitEvents</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Code = 202      " enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49588">202</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="23&#x9;when type=DVR_SUBSCRIPTION_CREATE" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
  {&#xd;
  &quot;deviceType&quot;: &quot;managedCubiTv&quot;,&#xd;
  &quot;product&quot;: &quot;CubiTv&quot;,&#xd;
  &quot;itemId&quot;: &quot;tivo:ct.49457168&quot;,&#xd;
  &quot;queryId&quot;: &quot;5dasf2345701vgfs&quot;,&#xd;
  &quot;utcOffset&quot;: &quot;-0600&quot;,&#xd;
  &quot;country&quot;: &quot;USA&quot;,&#xd;
  &quot;type&quot;: &quot;DVR_SUBSCRIPTION_CREATE&quot;,&#xd;
  &quot;timestamp&quot;: 1591906757000&#xd;
  }&#xd;
]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/implicitEvents</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Code = 202      " enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49588">202</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="24&#x9;when type=DVR_SUBSCRIPTION_DELETE" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
  {&#xd;
  &quot;deviceType&quot;: &quot;managedCubiTv&quot;,&#xd;
  &quot;product&quot;: &quot;CubiTv&quot;,&#xd;
  &quot;itemId&quot;: &quot;tivo:ct.49457168&quot;,&#xd;
  &quot;queryId&quot;: &quot;5dasf2345701vgfs&quot;,&#xd;
  &quot;utcOffset&quot;: &quot;-0600&quot;,&#xd;
  &quot;country&quot;: &quot;USA&quot;,&#xd;
  &quot;type&quot;: &quot;DVR_SUBSCRIPTION_DELETE&quot;,&#xd;
  &quot;timestamp&quot;: 1591906757000&#xd;
  }&#xd;
]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/implicitEvents</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Code = 202      " enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49588">202</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="25&#x9;when timestamp=&lt;now&gt;" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
  {&#xd;
  &quot;deviceType&quot;: &quot;managedCubiTv&quot;,&#xd;
  &quot;product&quot;: &quot;CubiTv&quot;,&#xd;
  &quot;itemId&quot;: &quot;tivo:ct.49457168&quot;,&#xd;
  &quot;queryId&quot;: &quot;5dasf2345701vgfs&quot;,&#xd;
  &quot;utcOffset&quot;: &quot;-0600&quot;,&#xd;
  &quot;country&quot;: &quot;USA&quot;,&#xd;
  &quot;type&quot;: &quot;WTW_VIEW_DETAILS&quot;,&#xd;
  &quot;timestamp&quot;: &quot;${now}&quot;&#xd;
  }&#xd;
]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/deviceViewEvents</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import java.time.Instant

Instant instant = Instant.now();
var now=instant.toEpochMilli();
vars.put(&quot;now&quot;,now.toString());
var min2 = 2 * 60 * 1000
vars.put(&quot;startTime&quot;,(now - min2).toString());
vars.put(&quot;endTime&quot;  ,now.toString());
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49588">202</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="26. when timestamp=&lt;now&gt;-10days" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
  {&#xd;
  &quot;deviceType&quot;: &quot;managedCubiTv&quot;,&#xd;
  &quot;product&quot;: &quot;CubiTv&quot;,&#xd;
  &quot;itemId&quot;: &quot;tivo:ct.49457168&quot;,&#xd;
  &quot;queryId&quot;: &quot;5dasf2345701vgfs&quot;,&#xd;
  &quot;utcOffset&quot;: &quot;-0600&quot;,&#xd;
  &quot;country&quot;: &quot;USA&quot;,&#xd;
  &quot;type&quot;: &quot;WTW_VIEW_DETAILS&quot;,&#xd;
  &quot;timestamp&quot;: &quot;${tstamp}&quot;&#xd;
  }&#xd;
]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/deviceViewEvents</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import java.time.Instant

Instant instant = Instant.now();
var now=instant.toEpochMilli();
vars.put(&quot;now&quot;,now.toString());
var min2 = 2 * 60 * 1000
var day10 = 10 24 * 60 *  60 * 1000
var tstamp= now - day10
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49588">202</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="27&#x9;when timestamp=&lt;now&gt;+0days" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
  {&#xd;
  &quot;deviceType&quot;: &quot;managedCubiTv&quot;,&#xd;
  &quot;product&quot;: &quot;CubiTv&quot;,&#xd;
  &quot;itemId&quot;: &quot;tivo:ct.49457168&quot;,&#xd;
  &quot;queryId&quot;: &quot;5dasf2345701vgfs&quot;,&#xd;
  &quot;utcOffset&quot;: &quot;-0600&quot;,&#xd;
  &quot;country&quot;: &quot;USA&quot;,&#xd;
  &quot;type&quot;: &quot;WTW_VIEW_DETAILS&quot;,&#xd;
  &quot;timestamp&quot;: &quot;${tstamp}&quot;&#xd;
  }&#xd;
]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/deviceViewEvents</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import java.time.Instant

Instant instant = Instant.now();
var now=instant.toEpochMilli();
vars.put(&quot;now&quot;,now.toString());
var min2 = 2 * 60 * 1000
vars.put(&quot;startTime&quot;,(now - min2).toString());
vars.put(&quot;endTime&quot;  ,now.toString());
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49588">202</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Search" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1. /v1/feedItems/search" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="keyword" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">A*</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">keyword</stringProp>
              </elementProp>
              <elementProp name="objectTypes" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">collection,content,channel</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">objectTypes</stringProp>
              </elementProp>
              <elementProp name="count" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">10</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">count</stringProp>
              </elementProp>
              <elementProp name="offset" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">offset</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/feedItems/search</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="2. When special chars in keyword=z*" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="keyword" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">z*</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">keyword</stringProp>
              </elementProp>
              <elementProp name="objectTypes" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">collection,content,channel</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">objectTypes</stringProp>
              </elementProp>
              <elementProp name="count" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">10</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">count</stringProp>
              </elementProp>
              <elementProp name="offset" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">10</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">offset</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/feedItems/search</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3. When number in keyword=12" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="keyword" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">12</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">keyword</stringProp>
              </elementProp>
              <elementProp name="objectTypes" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">collection,content,channel</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">objectTypes</stringProp>
              </elementProp>
              <elementProp name="count" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">10</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">count</stringProp>
              </elementProp>
              <elementProp name="offset" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">10</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">offset</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/feedItems/search</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="4. When keyword=&apos;K&apos; &amp;objectType=channel" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="keyword" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">k</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">keyword</stringProp>
              </elementProp>
              <elementProp name="objectTypes" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">channel</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">objectTypes</stringProp>
              </elementProp>
              <elementProp name="count" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">10</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">count</stringProp>
              </elementProp>
              <elementProp name="offset" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">10</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">offset</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/feedItems/search</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="5. When keyword=&apos;Simpsons&apos; &amp;objectType=content" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="keyword" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">Simpsons</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">keyword</stringProp>
              </elementProp>
              <elementProp name="objectTypes" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">content</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">objectTypes</stringProp>
              </elementProp>
              <elementProp name="count" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">10</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">count</stringProp>
              </elementProp>
              <elementProp name="offset" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">10</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">offset</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/feedItems/search</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="6. When keyword=&apos;Dr&apos; &amp;objectType=collection" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="keyword" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">Dr</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">keyword</stringProp>
              </elementProp>
              <elementProp name="objectTypes" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">collection</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">objectTypes</stringProp>
              </elementProp>
              <elementProp name="count" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">10</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">count</stringProp>
              </elementProp>
              <elementProp name="offset" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">10</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">offset</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/feedItems/search</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="7. When count is not passed" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="keyword" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">Dr</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">keyword</stringProp>
              </elementProp>
              <elementProp name="objectTypes" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">collection</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">objectTypes</stringProp>
              </elementProp>
              <elementProp name="offset" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">10</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">offset</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/feedItems/search</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="8. When count = 100" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="keyword" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">A*</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">keyword</stringProp>
              </elementProp>
              <elementProp name="objectTypes" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">collection,content,channel</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">objectTypes</stringProp>
              </elementProp>
              <elementProp name="count" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">100</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">count</stringProp>
              </elementProp>
              <elementProp name="offset" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">10</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">offset</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/feedItems/search</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="9. When keyword=&apos;Saving Private Ryan&apos;&amp;count=1000" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="keyword" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">Saving Private Ryan</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">keyword</stringProp>
              </elementProp>
              <elementProp name="objectTypes" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">collection,content,channel</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">objectTypes</stringProp>
              </elementProp>
              <elementProp name="count" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">1000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">count</stringProp>
              </elementProp>
              <elementProp name="offset" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">10</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">offset</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/feedItems/search</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="10. When keyword=&lt;adultkeyword&gt;&amp;includeAdult=true" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="keyword" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">Sex</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">keyword</stringProp>
              </elementProp>
              <elementProp name="objectTypes" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">collection,content,channel</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">objectTypes</stringProp>
              </elementProp>
              <elementProp name="count" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">10</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">count</stringProp>
              </elementProp>
              <elementProp name="offset" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">10</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">offset</stringProp>
              </elementProp>
              <elementProp name="includeAdult" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">true</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">includeAdult</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/feedItems/search</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="11. When keyword=&lt;adultkeyword&gt;&amp;includeAdult=false" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="keyword" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">Sex</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">keyword</stringProp>
              </elementProp>
              <elementProp name="objectTypes" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">collection,content,channel</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">objectTypes</stringProp>
              </elementProp>
              <elementProp name="count" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">10</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">count</stringProp>
              </elementProp>
              <elementProp name="offset" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">10</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">offset</stringProp>
              </elementProp>
              <elementProp name="includeAdult" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">false</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">includeAdult</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/feedItems/search</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="12. When offset = 10" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="keyword" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">A*</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">keyword</stringProp>
              </elementProp>
              <elementProp name="objectTypes" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">collection,content,channel</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">objectTypes</stringProp>
              </elementProp>
              <elementProp name="count" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">100</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">count</stringProp>
              </elementProp>
              <elementProp name="offset" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">100</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">offset</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/feedItems/search</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Entitlement" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1. check" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps_entitlement_host}</stringProp>
          <stringProp name="HTTPSampler.port">${aps_entitlement_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/check</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Device Configuration" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${aps}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Preview Pane" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1. /v1/offers/{contentId}?providerId=&lt;array of providerId&gt;" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${aps}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/offers/tivo:ct.332681338</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Mind" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="partnerInfoSearch" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="type" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">partnerInfoSearch</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">type</stringProp>
              </elementProp>
              <elementProp name="bodyId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${bodyId}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">bodyId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${mind}</stringProp>
          <stringProp name="HTTPSampler.port">${mindPort}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${mindPath}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames"></stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs"></stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">/*
 * Extract
 * 	&quot;partnerId&quot;: &quot;tivo:pt.1009003&quot;,
 * 	&quot;partnerType&quot;: [  &quot;videoProvider&quot; } 
 * 	&quot;vodAppName&quot;: &quot;Cableco3Socu&quot;
 * 	serviceGroup&quot;: [&quot;DG_vp_cableco3_socu&quot;],
*/</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="serviceGroupSearch" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="type" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">serviceGroupSearch</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">type</stringProp>
              </elementProp>
              <elementProp name="bodyId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${bodyId}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">bodyId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${mind}</stringProp>
          <stringProp name="HTTPSampler.port">${mindPort}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${mindPath}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames"></stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs"></stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">/*
 * Extract
 * 	&quot;groupName&quot;: &quot;DG_vp_*,
\*/</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PostProcessor>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="APS-Shared-Service" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="bodyConfiguration" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="bodyId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${anonBodyId}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">bodyId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host_disc}</stringProp>
          <stringProp name="HTTPSampler.port">${mindPort}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/v1/bodyConfiguration</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
            <stringProp name="JSONPostProcessor.referenceNames"></stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs"></stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="false">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">/*
 * Extract
 * 	&quot;partnerId&quot;: &quot;tivo:pt.1009003&quot;,
 * 	&quot;partnerType&quot;: [  &quot;videoProvider&quot; } 
 * 	&quot;vodAppName&quot;: &quot;Cableco3Socu&quot;
 * 	serviceGroup&quot;: [&quot;DG_vp_cableco3_socu&quot;],
*/</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="serviceGroupSearch" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="type" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">serviceGroupSearch</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">type</stringProp>
              </elementProp>
              <elementProp name="bodyId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${bodyId}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">bodyId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${mind}</stringProp>
          <stringProp name="HTTPSampler.port">${mindPort}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${mindPath}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames"></stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs"></stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">/*
 * Extract
 * 	&quot;groupName&quot;: &quot;DG_vp_*,
\*/</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PostProcessor>
          <hashTree/>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
